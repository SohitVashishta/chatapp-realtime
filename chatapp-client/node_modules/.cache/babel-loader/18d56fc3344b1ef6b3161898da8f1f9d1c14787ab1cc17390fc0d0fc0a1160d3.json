{"ast":null,"code":"import _objectSpread from\"D:/Project/ChatApplication/chatapp-client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useRef}from\"react\";import{connection,startConnection}from\"../services/signalRConnection\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatWindow=_ref=>{let{currentUser,onLogout}=_ref;const[users,setUsers]=useState([]);const[selectedUser,setSelectedUser]=useState(null);const[message,setMessage]=useState(\"\");const[allChats,setAllChats]=useState({});const[notifications,setNotifications]=useState({});const[chatBackground,setChatBackground]=useState(\"#f0f0f0\");const messagesEndRef=useRef(null);const API_URL=process.env.REACT_APP_API_URL;// Scroll to bottom on new messages\nuseEffect(()=>{if(messagesEndRef.current)messagesEndRef.current.scrollIntoView({behavior:\"smooth\"});},[allChats,selectedUser]);// Initialize SignalR\nuseEffect(()=>{const init=async()=>{try{if(connection.state!==\"Connected\")await startConnection();if(connection.state===\"Connected\")await connection.invoke(\"Login\",currentUser.id);else{setTimeout(init,1000);return;}// Remove old listener and add new one\nconnection.off(\"ReceiveMessage\");connection.on(\"ReceiveMessage\",(senderId,receiverId,messageText,messageType,fileName)=>{// ⚠️ Skip if current user is sender (because message already added locally)\nif(senderId===currentUser.id)return;const otherUserId=String(senderId===currentUser.id?receiverId:senderId);const msg={senderId,type:messageType||\"text\",fileName,senderUsername:senderId===currentUser.id?currentUser.username:\"Other\",message:messageText};setAllChats(prev=>_objectSpread(_objectSpread({},prev),{},{[otherUserId]:[...(prev[otherUserId]||[]),msg]}));if(!selectedUser||String(selectedUser.id)!==otherUserId){setNotifications(prev=>_objectSpread(_objectSpread({},prev),{},{[otherUserId]:(prev[otherUserId]||0)+1}));}});// Fetch users\nconst res=await fetch(\"\".concat(API_URL,\"/api/users\"));const data=await res.json();setUsers(data.filter(u=>u.id!==currentUser.id));}catch(err){console.error(err);}};init();return()=>connection.off(\"ReceiveMessage\");},[currentUser]);// ✅ Send text or file messages\nconst sendMessage=async function(msg){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"text\";let fileName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!msg&&type===\"text\"||!selectedUser)return;try{await connection.invoke(\"SendMessage\",selectedUser.id,msg,type,fileName);// Add message locally so sender sees it instantly\nconst newMsg={senderId:currentUser.id,receiverId:selectedUser.id,message:msg,type,fileName};setAllChats(prev=>_objectSpread(_objectSpread({},prev),{},{[String(selectedUser.id)]:[...(prev[String(selectedUser.id)]||[]),newMsg]}));if(type===\"text\")setMessage(\"\");}catch(error){console.error(\"Error sending message:\",error);}};const fetchMessages=async user=>{const res=await fetch(\"\".concat(API_URL,\"/api/users/messages/\").concat(currentUser.id,\"/\").concat(user.id));const msgs=await res.json();const formatted=msgs.map(m=>({senderId:m.senderId,type:m.type||\"text\",fileName:m.fileName,senderUsername:m.senderId===currentUser.id?currentUser.username:user.username,message:m.type===\"text\"?m.text:m.fileBase64||\"\"}));setAllChats(prev=>_objectSpread(_objectSpread({},prev),{},{[String(user.id)]:formatted}));};const handleUserClick=async user=>{setSelectedUser(user);setNotifications(prev=>_objectSpread(_objectSpread({},prev),{},{[String(user.id)]:0}));sessionStorage.setItem(\"lastSelectedUser\",JSON.stringify(user));await fetchMessages(user);};// Restore last selected user\nuseEffect(()=>{const lastUser=sessionStorage.getItem(\"lastSelectedUser\");if(lastUser)handleUserClick(JSON.parse(lastUser));},[]);// ✅ Handle file uploads (image or other)\nconst handleFileChange=async e=>{const file=e.target.files[0];if(!file||!selectedUser)return;const formData=new FormData();formData.append(\"file\",file);formData.append(\"senderId\",currentUser.id);formData.append(\"receiverId\",selectedUser.id);try{const res=await fetch(\"\".concat(API_URL,\"/api/files/upload\"),{method:\"POST\",body:formData});const data=await res.json();// Now send via SignalR\nawait sendMessage(data.fileBase64,data.type,file.name);}catch(err){console.error(\"File upload failed:\",err);}e.target.value=null;};const handleLogoutClick=()=>{sessionStorage.removeItem(\"currentUser\");sessionStorage.removeItem(\"lastSelectedUser\");onLogout();};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen bg-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-lg\",children:currentUser.username}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogoutClick,className:\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",children:\"Logout\"})]}),users.map(u=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleUserClick(u),className:\"flex justify-between items-center p-2 rounded cursor-pointer mb-1 \".concat((selectedUser===null||selectedUser===void 0?void 0:selectedUser.id)===u.id?\"bg-blue-100\":\"hover:bg-gray-200\"),children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:u.username}),notifications[String(u.id)]>0&&/*#__PURE__*/_jsx(\"span\",{className:\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",children:notifications[String(u.id)]})]},u.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col p-4\",children:selectedUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-lg border-b pb-2\",children:selectedUser.username}),/*#__PURE__*/_jsx(\"input\",{type:\"color\",value:chatBackground,onChange:e=>setChatBackground(e.target.value),className:\"w-10 h-8 rounded cursor-pointer\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\",style:{backgroundColor:chatBackground},children:[(allChats[String(selectedUser.id)]||[]).map((c,i)=>{let content;if(c.type===\"text\"){content=/*#__PURE__*/_jsx(\"span\",{children:c.message});}else if(c.type===\"image\"&&c.message){content=/*#__PURE__*/_jsx(\"div\",{className:\"w-[250px] h-[200px] overflow-hidden rounded-lg\",children:/*#__PURE__*/_jsx(\"img\",{src:c.message.startsWith(\"data:\")?c.message:\"data:image/jpeg;base64,\".concat(c.message),alt:\"sent\",className:\"object-cover w-full h-full\"})});}else if(c.type===\"file\"&&c.message){content=/*#__PURE__*/_jsx(\"a\",{href:\"data:application/octet-stream;base64,\".concat(c.message),download:c.fileName,className:\"underline text-blue-700\",children:c.fileName});}return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-[70%] p-2 rounded-lg shadow break-words \".concat(c.senderId===currentUser.id?\"self-end bg-blue-500 text-white\":\"self-start bg-white text-gray-800\"),children:content},i);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",placeholder:\"Message...\",value:message,onChange:e=>setMessage(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage(message,\"text\")}),/*#__PURE__*/_jsxs(\"label\",{className:\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",children:[\"\\uD83D\\uDCCE\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"hidden\",onChange:handleFileChange})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",children:[\"\\uD83D\\uDCF8\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"hidden\",onChange:handleFileChange,accept:\"image/*\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(message,\"text\"),className:\"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\",children:\"Send\"})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center text-gray-400 text-lg\",children:\"Select a user to start chat\"})})]});};export default ChatWindow;","map":{"version":3,"names":["React","useEffect","useState","useRef","connection","startConnection","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatWindow","_ref","currentUser","onLogout","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","chatBackground","setChatBackground","messagesEndRef","API_URL","process","env","REACT_APP_API_URL","current","scrollIntoView","behavior","init","state","invoke","id","setTimeout","off","on","senderId","receiverId","messageText","messageType","fileName","otherUserId","String","msg","type","senderUsername","username","prev","_objectSpread","res","fetch","concat","data","json","filter","u","err","console","error","sendMessage","arguments","length","undefined","newMsg","fetchMessages","user","msgs","formatted","map","m","text","fileBase64","handleUserClick","sessionStorage","setItem","JSON","stringify","lastUser","getItem","parse","handleFileChange","e","file","target","files","formData","FormData","append","method","body","name","value","handleLogoutClick","removeItem","className","children","onClick","onChange","style","backgroundColor","c","i","content","src","startsWith","alt","href","download","ref","placeholder","onKeyDown","key","accept"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [allChats, setAllChats] = useState({});\r\n    const [notifications, setNotifications] = useState({});\r\n    const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\r\n    const messagesEndRef = useRef(null);\r\n    const API_URL = process.env.REACT_APP_API_URL;\r\n    // Scroll to bottom on new messages\r\n    useEffect(() => {\r\n        if (messagesEndRef.current)\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [allChats, selectedUser]);\r\n\r\n    // Initialize SignalR\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                if (connection.state !== \"Connected\") await startConnection();\r\n\r\n                if (connection.state === \"Connected\")\r\n                    await connection.invoke(\"Login\", currentUser.id);\r\n                else {\r\n                    setTimeout(init, 1000);\r\n                    return;\r\n                }\r\n\r\n                // Remove old listener and add new one\r\n                connection.off(\"ReceiveMessage\");\r\n                connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName) => {\r\n                    // ⚠️ Skip if current user is sender (because message already added locally)\r\n                    if (senderId === currentUser.id) return;\r\n\r\n                    const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\r\n\r\n                    const msg = {\r\n                        senderId,\r\n                        type: messageType || \"text\",\r\n                        fileName,\r\n                        senderUsername: senderId === currentUser.id ? currentUser.username : \"Other\",\r\n                        message: messageText,\r\n                    };\r\n\r\n                    setAllChats((prev) => ({\r\n                        ...prev,\r\n                        [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n                    }));\r\n\r\n                    if (!selectedUser || String(selectedUser.id) !== otherUserId) {\r\n                        setNotifications((prev) => ({\r\n                            ...prev,\r\n                            [otherUserId]: (prev[otherUserId] || 0) + 1,\r\n                        }));\r\n                    }\r\n                });\r\n\r\n\r\n                // Fetch users\r\n                const res = await fetch(`${API_URL}/api/users`);\r\n                const data = await res.json();\r\n                setUsers(data.filter((u) => u.id !== currentUser.id));\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        init();\r\n\r\n        return () => connection.off(\"ReceiveMessage\");\r\n    }, [currentUser]);\r\n\r\n    // ✅ Send text or file messages\r\n    const sendMessage = async (msg, type = \"text\", fileName = null) => {\r\n        if ((!msg && type === \"text\") || !selectedUser) return;\r\n\r\n        try {\r\n            await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName);\r\n\r\n            // Add message locally so sender sees it instantly\r\n            const newMsg = {\r\n                senderId: currentUser.id,\r\n                receiverId: selectedUser.id,\r\n                message: msg,\r\n                type,\r\n                fileName,\r\n            };\r\n\r\n            setAllChats((prev) => ({\r\n                ...prev,\r\n                [String(selectedUser.id)]: [...(prev[String(selectedUser.id)] || []), newMsg],\r\n            }));\r\n\r\n            if (type === \"text\") setMessage(\"\");\r\n        } catch (error) {\r\n            console.error(\"Error sending message:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async (user) => {\r\n        const res = await fetch(`${API_URL}/api/users/messages/${currentUser.id}/${user.id}`);\r\n        const msgs = await res.json();\r\n\r\n        const formatted = msgs.map((m) => ({\r\n            senderId: m.senderId,\r\n            type: m.type || \"text\",\r\n            fileName: m.fileName,\r\n            senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username,\r\n            message: m.type === \"text\" ? m.text : m.fileBase64 || \"\",\r\n        }));\r\n\r\n        setAllChats((prev) => ({\r\n            ...prev,\r\n            [String(user.id)]: formatted,\r\n        }));\r\n    };\r\n\r\n    const handleUserClick = async (user) => {\r\n        setSelectedUser(user);\r\n        setNotifications((prev) => ({ ...prev, [String(user.id)]: 0 }));\r\n        sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\r\n        await fetchMessages(user);\r\n    };\r\n\r\n    // Restore last selected user\r\n    useEffect(() => {\r\n        const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\r\n        if (lastUser) handleUserClick(JSON.parse(lastUser));\r\n    }, []);\r\n\r\n    // ✅ Handle file uploads (image or other)\r\n    const handleFileChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file || !selectedUser) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"senderId\", currentUser.id);\r\n        formData.append(\"receiverId\", selectedUser.id);\r\n\r\n        try {\r\n            const res = await fetch(`${API_URL}/api/files/upload`, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n            const data = await res.json();\r\n\r\n            // Now send via SignalR\r\n            await sendMessage(data.fileBase64, data.type, file.name);\r\n        } catch (err) {\r\n            console.error(\"File upload failed:\", err);\r\n        }\r\n\r\n        e.target.value = null;\r\n    };\r\n\r\n    const handleLogoutClick = () => {\r\n        sessionStorage.removeItem(\"currentUser\");\r\n        sessionStorage.removeItem(\"lastSelectedUser\");\r\n        onLogout();\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100\">\r\n            {/* Users List */}\r\n            <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n                    <button\r\n                        onClick={handleLogoutClick}\r\n                        className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n                {users.map((u) => (\r\n                    <div\r\n                        key={u.id}\r\n                        onClick={() => handleUserClick(u)}\r\n                        className={`flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${selectedUser?.id === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"\r\n                            }`}\r\n                    >\r\n                        <span className=\"font-medium\">{u.username}</span>\r\n                        {notifications[String(u.id)] > 0 && (\r\n                            <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">\r\n                                {notifications[String(u.id)]}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Chat Window */}\r\n            <div className=\"flex-1 flex flex-col p-4\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <div className=\"flex justify-between items-center mb-2\">\r\n                            <h2 className=\"font-bold text-lg border-b pb-2\">{selectedUser.username}</h2>\r\n                            <input\r\n                                type=\"color\"\r\n                                value={chatBackground}\r\n                                onChange={(e) => setChatBackground(e.target.value)}\r\n                                className=\"w-10 h-8 rounded cursor-pointer\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\"\r\n                            style={{ backgroundColor: chatBackground }}\r\n                        >\r\n                            {(allChats[String(selectedUser.id)] || []).map((c, i) => {\r\n                                let content;\r\n\r\n                                if (c.type === \"text\") {\r\n                                    content = <span>{c.message}</span>;\r\n                                } else if (c.type === \"image\" && c.message) {\r\n                                    content = (\r\n                                        <div className=\"w-[250px] h-[200px] overflow-hidden rounded-lg\">\r\n                                            <img\r\n                                                src={\r\n                                                    c.message.startsWith(\"data:\")\r\n                                                        ? c.message\r\n                                                        : `data:image/jpeg;base64,${c.message}`\r\n                                                }\r\n                                                alt=\"sent\"\r\n                                                className=\"object-cover w-full h-full\"\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                } else if (c.type === \"file\" && c.message) {\r\n                                    content = (\r\n                                        <a\r\n                                            href={`data:application/octet-stream;base64,${c.message}`}\r\n                                            download={c.fileName}\r\n                                            className=\"underline text-blue-700\"\r\n                                        >\r\n                                            {c.fileName}\r\n                                        </a>\r\n                                    );\r\n                                }\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={i}\r\n                                        className={`max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id\r\n                                                ? \"self-end bg-blue-500 text-white\"\r\n                                                : \"self-start bg-white text-gray-800\"\r\n                                            }`}\r\n                                    >\r\n                                        {content}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n\r\n                            <div ref={messagesEndRef} />\r\n                        </div>\r\n\r\n                        {/* Input */}\r\n                        <div className=\"flex items-center space-x-2 mt-2\">\r\n                            <input\r\n                                className=\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                                placeholder=\"Message...\"\r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                onKeyDown={(e) => e.key === \"Enter\" && sendMessage(message, \"text\")}\r\n                            />\r\n                            <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                                📎\r\n                                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} />\r\n                            </label>\r\n                            <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                                📸\r\n                                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} accept=\"image/*\" />\r\n                            </label>\r\n                            <button\r\n                                onClick={() => sendMessage(message, \"text\")}\r\n                                className=\"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\"\r\n                            >\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">\r\n                        Select a user to start chat\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}