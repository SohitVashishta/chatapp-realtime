{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport connection from '../services/signalRConnection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    // Listen for incoming messages\n    connection.on(\"ReceiveMessage\", (user, message) => {\n      setChat(prev => [...prev, {\n        user,\n        message\n      }]);\n    });\n\n    // Cleanup on unmount to prevent duplicate handlers\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, []);\n  const sendMessage = async () => {\n    if (!user || !message) return; // Ensure fields are filled\n\n    if (connection.state === 1) {\n      // Connected\n      try {\n        await connection.invoke(\"SendMessage\", user, message);\n        setMessage(\"\"); // Clear input\n      } catch (err) {\n        console.error(\"Error sending message: \", err);\n      }\n    } else {\n      console.warn(\"Connection not ready, message not sent.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 flex-1\",\n        placeholder: \"Your name...\",\n        value: user,\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto bg-white p-3 rounded shadow\",\n      children: chat.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 ${c.user === user ? 'text-right' : 'text-left'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [c.user, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), c.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 flex-1\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2 ml-2 rounded\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"tFjKjUPfwVYninsiZSJwSBXzZtk=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","jsxDEV","_jsxDEV","ChatWindow","_s","user","setUser","message","setMessage","chat","setChat","on","prev","off","sendMessage","state","invoke","err","console","error","warn","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","c","i","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport connection from '../services/signalRConnection';\r\n\r\nconst ChatWindow = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Listen for incoming messages\r\n    connection.on(\"ReceiveMessage\", (user, message) => {\r\n      setChat(prev => [...prev, { user, message }]);\r\n    });\r\n\r\n    // Cleanup on unmount to prevent duplicate handlers\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!user || !message) return; // Ensure fields are filled\r\n\r\n    if (connection.state === 1) { // Connected\r\n      try {\r\n        await connection.invoke(\"SendMessage\", user, message);\r\n        setMessage(\"\"); // Clear input\r\n      } catch (err) {\r\n        console.error(\"Error sending message: \", err);\r\n      }\r\n    } else {\r\n      console.warn(\"Connection not ready, message not sent.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100 p-4\">\r\n      {/* Username input */}\r\n      <div className=\"flex mb-2\">\r\n        <input\r\n          className=\"border p-2 flex-1\"\r\n          placeholder=\"Your name...\"\r\n          value={user}\r\n          onChange={e => setUser(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Chat messages */}\r\n      <div className=\"flex-1 overflow-y-auto bg-white p-3 rounded shadow\">\r\n        {chat.map((c, i) => (\r\n          <div key={i} className={`p-2 ${c.user === user ? 'text-right' : 'text-left'}`}>\r\n            <strong>{c.user}: </strong>{c.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Message input */}\r\n      <div className=\"flex mt-3\">\r\n        <input\r\n          className=\"border p-2 flex-1\"\r\n          placeholder=\"Type a message...\"\r\n          value={message}\r\n          onChange={e => setMessage(e.target.value)}\r\n          onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n        />\r\n        <button\r\n          className=\"bg-blue-500 text-white p-2 ml-2 rounded\"\r\n          onClick={sendMessage}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}