{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [userId, setUserId] = useState(0); // logged-in user\n  const [receiverId, setReceiverId] = useState(0); // 0 = group chat\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Initialize connection and listeners\n  useEffect(() => {\n    const init = async () => {\n      await startConnection();\n      connection.on(\"ReceiveMessage\", (senderId, message) => {\n        setChat(prev => [...prev, {\n          senderId,\n          message\n        }]);\n      });\n      connection.on(\"UserLoggedIn\", id => {\n        console.log(`User ${id} logged in`);\n      });\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n      connection.off(\"UserLoggedIn\");\n    };\n  }, []);\n\n  // Login function\n  async function login() {\n    if (userId <= 0) return alert(\"Enter a valid user ID\");\n    if (connection.state !== 2) {\n      // HubConnectionState.Connected\n      return console.warn(\"Connection not ready for login.\");\n    }\n    try {\n      await connection.invoke(\"Login\", userId);\n      setLoggedIn(true);\n      console.log(`Logged in as user ${userId}`);\n    } catch (err) {\n      console.error(\"Login failed: \", err);\n    }\n  }\n\n  // Send message function\n  async function sendMessage() {\n    if (message.trim() === \"\") return;\n    if (connection.state === 2) {\n      // HubConnectionState.Connected\n      try {\n        await connection.invoke(\"SendMessage\", receiverId, message);\n        setMessage(\"\");\n      } catch (err) {\n        console.error(\"Error sending message: \", err);\n      }\n    } else {\n      console.warn(\"Connection not ready, message not sent.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100 p-4\",\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"border p-2 mr-2\",\n        placeholder: \"Your user ID...\",\n        value: userId,\n        onChange: e => setUserId(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white p-2 rounded\",\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"border p-2 mr-2\",\n          placeholder: \"Receiver ID (0 = group)\",\n          value: receiverId,\n          onChange: e => setReceiverId(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto bg-white p-3 rounded shadow\",\n        children: chat.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 ${c.senderId === userId ? \"text-right\" : \"text-left\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [c.senderId, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), c.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border p-2 flex-1\",\n          placeholder: \"Type a message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white p-2 ml-2 rounded\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"/1L6nTr2ynu7grb83fbES9ei2wY=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","userId","setUserId","receiverId","setReceiverId","message","setMessage","chat","setChat","loggedIn","setLoggedIn","init","on","senderId","prev","id","console","log","off","login","alert","state","warn","invoke","err","error","sendMessage","trim","className","children","type","placeholder","value","onChange","e","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","c","i","onKeyDown","key","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = () => {\r\n  const [userId, setUserId] = useState(0); // logged-in user\r\n  const [receiverId, setReceiverId] = useState(0); // 0 = group chat\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  // Initialize connection and listeners\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await startConnection();\r\n\r\n      connection.on(\"ReceiveMessage\", (senderId, message) => {\r\n        setChat((prev) => [...prev, { senderId, message }]);\r\n      });\r\n\r\n      connection.on(\"UserLoggedIn\", (id) => {\r\n        console.log(`User ${id} logged in`);\r\n      });\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n      connection.off(\"UserLoggedIn\");\r\n    };\r\n  }, []);\r\n\r\n  // Login function\r\n  async function login() {\r\n    if (userId <= 0) return alert(\"Enter a valid user ID\");\r\n\r\n    if (connection.state !== 2) { // HubConnectionState.Connected\r\n      return console.warn(\"Connection not ready for login.\");\r\n    }\r\n\r\n    try {\r\n      await connection.invoke(\"Login\", userId);\r\n      setLoggedIn(true);\r\n      console.log(`Logged in as user ${userId}`);\r\n    } catch (err) {\r\n      console.error(\"Login failed: \", err);\r\n    }\r\n  }\r\n\r\n  // Send message function\r\n  async function sendMessage() {\r\n    if (message.trim() === \"\") return;\r\n\r\n    if (connection.state === 2) { // HubConnectionState.Connected\r\n      try {\r\n        await connection.invoke(\"SendMessage\", receiverId, message);\r\n        setMessage(\"\");\r\n      } catch (err) {\r\n        console.error(\"Error sending message: \", err);\r\n      }\r\n    } else {\r\n      console.warn(\"Connection not ready, message not sent.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100 p-4\">\r\n      {!loggedIn ? (\r\n        <div className=\"mb-4\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"border p-2 mr-2\"\r\n            placeholder=\"Your user ID...\"\r\n            value={userId}\r\n            onChange={(e) => setUserId(parseInt(e.target.value))}\r\n          />\r\n          <button\r\n            className=\"bg-green-500 text-white p-2 rounded\"\r\n            onClick={login}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"flex mb-2\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"border p-2 mr-2\"\r\n              placeholder=\"Receiver ID (0 = group)\"\r\n              value={receiverId}\r\n              onChange={(e) => setReceiverId(parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex-1 overflow-y-auto bg-white p-3 rounded shadow\">\r\n            {chat.map((c, i) => (\r\n              <div\r\n                key={i}\r\n                className={`p-2 ${\r\n                  c.senderId === userId ? \"text-right\" : \"text-left\"\r\n                }`}\r\n              >\r\n                <strong>{c.senderId}: </strong>\r\n                {c.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"flex mt-3\">\r\n            <input\r\n              className=\"border p-2 flex-1\"\r\n              placeholder=\"Type a message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n            />\r\n            <button\r\n              className=\"bg-blue-500 text-white p-2 ml-2 rounded\"\r\n              onClick={sendMessage}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}