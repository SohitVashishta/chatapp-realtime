{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport * as signalR from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [userId, setUserId] = useState(0); // current logged-in user\n  const [receiverId, setReceiverId] = useState(0); // 0 = group chat\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [connectionReady, setConnectionReady] = useState(false);\n\n  // Initialize connection and setup listener\n  useEffect(() => {\n    const initConnection = async () => {\n      try {\n        await startConnection();\n        setConnectionReady(true);\n\n        // Listen for incoming messages\n        connection.on(\"ReceiveMessage\", (senderId, message) => {\n          setChat(prev => [...prev, {\n            senderId,\n            message\n          }]);\n        });\n      } catch (err) {\n        console.error(\"Connection failed: \", err);\n      }\n    };\n    initConnection();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, []);\n\n  // Login function\n  const login = async () => {\n    if (userId <= 0) return alert(\"Enter a valid user ID\");\n    if (connection.state !== signalR.HubConnectionState.Connected) {\n      console.warn(\"Connection not ready for login, waiting...\");\n      try {\n        await connection.start();\n        console.log(\"Connection established before login\");\n      } catch (err) {\n        console.error(\"Failed to connect before login: \", err);\n        return;\n      }\n    }\n    try {\n      await connection.invoke(\"Login\", userId);\n      setLoggedIn(true);\n      console.log(`Logged in as user ${userId}`);\n    } catch (err) {\n      console.error(\"Login failed: \", err);\n    }\n  };\n\n  // Send message function\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    if (connection.state !== signalR.HubConnectionState.Connected) {\n      console.warn(\"Connection not ready, message not sent.\");\n      return;\n    }\n    try {\n      await connection.invoke(\"SendMessage\", receiverId, message);\n      setMessage(\"\"); // clear input\n    } catch (err) {\n      console.error(\"Error sending message: \", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100 p-4\",\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"border p-2 mr-2\",\n        placeholder: \"Your user ID...\",\n        value: userId,\n        onChange: e => setUserId(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white p-2 rounded\",\n        onClick: login,\n        disabled: !connectionReady,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"border p-2 mr-2\",\n          placeholder: \"Receiver ID (0 = group)\",\n          value: receiverId,\n          onChange: e => setReceiverId(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto bg-white p-3 rounded shadow\",\n        children: chat.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 ${c.senderId === userId ? \"text-right\" : \"text-left\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [c.senderId, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), c.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border p-2 flex-1\",\n          placeholder: \"Type a message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white p-2 ml-2 rounded\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"5hpLgfJI7y1X7c+i0PxQLHgTQYs=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","signalR","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","userId","setUserId","receiverId","setReceiverId","message","setMessage","chat","setChat","loggedIn","setLoggedIn","connectionReady","setConnectionReady","initConnection","on","senderId","prev","err","console","error","off","login","alert","state","HubConnectionState","Connected","warn","start","log","invoke","sendMessage","trim","className","children","type","placeholder","value","onChange","e","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","c","i","onKeyDown","key","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["// src/components/ChatWindow.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nconst ChatWindow = () => {\r\n  const [userId, setUserId] = useState(0); // current logged-in user\r\n  const [receiverId, setReceiverId] = useState(0); // 0 = group chat\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [connectionReady, setConnectionReady] = useState(false);\r\n\r\n  // Initialize connection and setup listener\r\n  useEffect(() => {\r\n    const initConnection = async () => {\r\n      try {\r\n        await startConnection();\r\n        setConnectionReady(true);\r\n\r\n        // Listen for incoming messages\r\n        connection.on(\"ReceiveMessage\", (senderId, message) => {\r\n          setChat((prev) => [...prev, { senderId, message }]);\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Connection failed: \", err);\r\n      }\r\n    };\r\n\r\n    initConnection();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async () => {\r\n    if (userId <= 0) return alert(\"Enter a valid user ID\");\r\n\r\n    if (connection.state !== signalR.HubConnectionState.Connected) {\r\n      console.warn(\"Connection not ready for login, waiting...\");\r\n      try {\r\n        await connection.start();\r\n        console.log(\"Connection established before login\");\r\n      } catch (err) {\r\n        console.error(\"Failed to connect before login: \", err);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      await connection.invoke(\"Login\", userId);\r\n      setLoggedIn(true);\r\n      console.log(`Logged in as user ${userId}`);\r\n    } catch (err) {\r\n      console.error(\"Login failed: \", err);\r\n    }\r\n  };\r\n\r\n  // Send message function\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    if (connection.state !== signalR.HubConnectionState.Connected) {\r\n      console.warn(\"Connection not ready, message not sent.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await connection.invoke(\"SendMessage\", receiverId, message);\r\n      setMessage(\"\"); // clear input\r\n    } catch (err) {\r\n      console.error(\"Error sending message: \", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100 p-4\">\r\n      {!loggedIn ? (\r\n        <div className=\"mb-4\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"border p-2 mr-2\"\r\n            placeholder=\"Your user ID...\"\r\n            value={userId}\r\n            onChange={(e) => setUserId(parseInt(e.target.value))}\r\n          />\r\n          <button\r\n            className=\"bg-green-500 text-white p-2 rounded\"\r\n            onClick={login}\r\n            disabled={!connectionReady}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"flex mb-2\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"border p-2 mr-2\"\r\n              placeholder=\"Receiver ID (0 = group)\"\r\n              value={receiverId}\r\n              onChange={(e) => setReceiverId(parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex-1 overflow-y-auto bg-white p-3 rounded shadow\">\r\n            {chat.map((c, i) => (\r\n              <div\r\n                key={i}\r\n                className={`p-2 ${\r\n                  c.senderId === userId ? \"text-right\" : \"text-left\"\r\n                }`}\r\n              >\r\n                <strong>{c.senderId}: </strong>\r\n                {c.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"flex mt-3\">\r\n            <input\r\n              className=\"border p-2 flex-1\"\r\n              placeholder=\"Type a message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n            />\r\n            <button\r\n              className=\"bg-blue-500 text-white p-2 ml-2 rounded\"\r\n              onClick={sendMessage}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}