{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await startConnection();\n\n        // Wait until connection is fully started\n        connection.onreconnected(() => setIsConnected(true));\n        connection.onclose(() => setIsConnected(false));\n        if (connection.state === 1) setIsConnected(true);\n\n        // login current user\n        await connection.invoke(\"Login\", currentUser.id);\n\n        // fetch users (excluding self)\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n\n        // listen for messages\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, text) => {\n          const chatKey = senderId === currentUser.id ? receiverId : senderId;\n          setAllChats(prev => ({\n            ...prev,\n            [chatKey]: [...(prev[chatKey] || []), {\n              senderId,\n              message: text\n            }]\n          }));\n        });\n      } catch (err) {\n        console.error(\"SignalR connection failed:\", err);\n      }\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser]);\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser) return;\n    if (!isConnected) {\n      console.warn(\"Connection not ready\");\n      return;\n    }\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\n\n      // update local chat immediately\n      setAllChats(prev => ({\n        ...prev,\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), {\n          senderId: currentUser.id,\n          message\n        }]\n      }));\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"Failed to send message:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-4\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 cursor-pointer ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-gray-200\" : \"\"}`,\n        onClick: () => setSelectedUser(user),\n        children: user.username\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: selectedUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto border p-2 rounded mb-2\",\n          children: (allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.senderId === currentUser.id ? \"You\" : selectedUser.username, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), c.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border p-2 rounded\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n            disabled: !isConnected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 p-2 bg-blue-500 text-white rounded disabled:opacity-50\",\n            onClick: sendMessage,\n            disabled: !isConnected,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-500\",\n        children: \"Select a user to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"OLy5qhY3jeBq3X+ttAhFGs5/794=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","isConnected","setIsConnected","init","onreconnected","onclose","state","invoke","id","res","fetch","data","json","filter","u","on","senderId","receiverId","text","chatKey","prev","err","console","error","off","sendMessage","trim","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","username","c","i","value","onChange","e","target","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["// src/components/ChatWindow.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        await startConnection();\r\n\r\n        // Wait until connection is fully started\r\n        connection.onreconnected(() => setIsConnected(true));\r\n        connection.onclose(() => setIsConnected(false));\r\n\r\n        if (connection.state === 1) setIsConnected(true);\r\n\r\n        // login current user\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        // fetch users (excluding self)\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter(u => u.id !== currentUser.id));\r\n\r\n        // listen for messages\r\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, text) => {\r\n          const chatKey = senderId === currentUser.id ? receiverId : senderId;\r\n          setAllChats(prev => ({\r\n            ...prev,\r\n            [chatKey]: [...(prev[chatKey] || []), { senderId, message: text }]\r\n          }));\r\n        });\r\n      } catch (err) {\r\n        console.error(\"SignalR connection failed:\", err);\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim() || !selectedUser) return;\r\n\r\n    if (!isConnected) {\r\n      console.warn(\"Connection not ready\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\r\n\r\n      // update local chat immediately\r\n      setAllChats(prev => ({\r\n        ...prev,\r\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), { senderId: currentUser.id, message }]\r\n      }));\r\n\r\n      setMessage(\"\");\r\n    } catch (err) {\r\n      console.error(\"Failed to send message:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* User List */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto\">\r\n        <h2 className=\"font-bold mb-4\">Users</h2>\r\n        {users.map(user => (\r\n          <div\r\n            key={user.id}\r\n            className={`p-2 cursor-pointer ${selectedUser?.id === user.id ? \"bg-gray-200\" : \"\"}`}\r\n            onClick={() => setSelectedUser(user)}\r\n          >\r\n            {user.username}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <h2 className=\"font-bold mb-2\">{selectedUser.username}</h2>\r\n            <div className=\"flex-1 overflow-y-auto border p-2 rounded mb-2\">\r\n              {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                <div key={i} className={`${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`}>\r\n                  <strong>{c.senderId === currentUser.id ? \"You\" : selectedUser.username}: </strong>\r\n                  {c.message}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <input\r\n                className=\"flex-1 border p-2 rounded\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n                onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n                disabled={!isConnected}\r\n              />\r\n              <button\r\n                className=\"ml-2 p-2 bg-blue-500 text-white rounded disabled:opacity-50\"\r\n                onClick={sendMessage}\r\n                disabled={!isConnected}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n            Select a user to chat\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}