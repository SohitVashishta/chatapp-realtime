{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport LoginPage from \"./components/LoginPage\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // ✅ On mount — check sessionStorage for saved user\n  useEffect(() => {\n    const savedUser = sessionStorage.getItem(\"currentUser\");\n    if (savedUser) {\n      const user = JSON.parse(savedUser);\n      setCurrentUser(user);\n    }\n  }, []);\n\n  // ✅ Handle successful login — save to sessionStorage\n  const handleLoginSuccess = user => {\n    setCurrentUser(user);\n    sessionStorage.setItem(\"currentUser\", JSON.stringify(user));\n    sessionStorage.setItem(\"loginTime\", Date.now());\n  };\n\n  // ✅ Handle logout — clear session\n  const handleLogout = () => {\n    setCurrentUser(null);\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"loginTime\");\n  };\n\n  // ✅ Auto logout after session expiry (30 mins)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const loginTime = sessionStorage.getItem(\"loginTime\");\n      if (loginTime) {\n        const now = Date.now();\n        const diff = now - parseInt(loginTime, 10);\n        const thirtyMinutes = 30 * 60 * 1000;\n        if (diff > thirtyMinutes) {\n          handleLogout();\n          alert(\"Session expired. Please log in again.\");\n        }\n      }\n    }, 60000); // check every 1 min\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: !currentUser ? /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatWindow, {\n      currentUser: currentUser,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OV9yLRz34hG/VYz7P4+j1dZgWH0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","LoginPage","ChatWindow","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","savedUser","sessionStorage","getItem","user","JSON","parse","handleLoginSuccess","setItem","stringify","Date","now","handleLogout","removeItem","interval","setInterval","loginTime","diff","parseInt","thirtyMinutes","alert","clearInterval","className","children","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LoginPage from \"./components/LoginPage\";\nimport ChatWindow from \"./components/ChatWindow\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // ✅ On mount — check sessionStorage for saved user\n  useEffect(() => {\n    const savedUser = sessionStorage.getItem(\"currentUser\");\n    if (savedUser) {\n      const user = JSON.parse(savedUser);\n      setCurrentUser(user);\n    }\n  }, []);\n\n  // ✅ Handle successful login — save to sessionStorage\n  const handleLoginSuccess = (user) => {\n    setCurrentUser(user);\n    sessionStorage.setItem(\"currentUser\", JSON.stringify(user));\n    sessionStorage.setItem(\"loginTime\", Date.now());\n  };\n\n  // ✅ Handle logout — clear session\n  const handleLogout = () => {\n    setCurrentUser(null);\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"loginTime\");\n  };\n\n  // ✅ Auto logout after session expiry (30 mins)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const loginTime = sessionStorage.getItem(\"loginTime\");\n      if (loginTime) {\n        const now = Date.now();\n        const diff = now - parseInt(loginTime, 10);\n        const thirtyMinutes = 30 * 60 * 1000;\n        if (diff > thirtyMinutes) {\n          handleLogout();\n          alert(\"Session expired. Please log in again.\");\n        }\n      }\n    }, 60000); // check every 1 min\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      {!currentUser ? (\n        <LoginPage onLoginSuccess={handleLoginSuccess} />\n      ) : (\n        <ChatWindow currentUser={currentUser} onLogout={handleLogout} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,IAAIF,SAAS,EAAE;MACb,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MAClCD,cAAc,CAACI,IAAI,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,kBAAkB,GAAIH,IAAI,IAAK;IACnCJ,cAAc,CAACI,IAAI,CAAC;IACpBF,cAAc,CAACM,OAAO,CAAC,aAAa,EAAEH,IAAI,CAACI,SAAS,CAACL,IAAI,CAAC,CAAC;IAC3DF,cAAc,CAACM,OAAO,CAAC,WAAW,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EACjD,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBZ,cAAc,CAAC,IAAI,CAAC;IACpBE,cAAc,CAACW,UAAU,CAAC,aAAa,CAAC;IACxCX,cAAc,CAACW,UAAU,CAAC,WAAW,CAAC;EACxC,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACd,MAAMuB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,SAAS,GAAGd,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;MACrD,IAAIa,SAAS,EAAE;QACb,MAAML,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,MAAMM,IAAI,GAAGN,GAAG,GAAGO,QAAQ,CAACF,SAAS,EAAE,EAAE,CAAC;QAC1C,MAAMG,aAAa,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;QACpC,IAAIF,IAAI,GAAGE,aAAa,EAAE;UACxBP,YAAY,CAAC,CAAC;UACdQ,KAAK,CAAC,uCAAuC,CAAC;QAChD;MACF;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACX,OAAO,MAAMC,aAAa,CAACP,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3B,CAACxB,WAAW,gBACXH,OAAA,CAACH,SAAS;MAAC+B,cAAc,EAAEjB;IAAmB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjDhC,OAAA,CAACF,UAAU;MAACK,WAAW,EAAEA,WAAY;MAAC8B,QAAQ,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CApDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}