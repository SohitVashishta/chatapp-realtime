{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await startConnection();\n        connection.onreconnected(() => setIsConnected(true));\n        connection.onclose(() => setIsConnected(false));\n        if (connection.state === \"Connected\") setIsConnected(true);\n\n        // Login current user\n        await connection.invoke(\"Login\", currentUser.id);\n\n        // Fetch all users except current one\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n\n        // Handle received messages\n        connection.on(\"ReceiveMessage\", (senderId, text) => {\n          // Handle if backend sends text as object or value (fix for '1' issue)\n          const actualMessage = typeof text === \"object\" ? text.message || \"\" : text === null || text === void 0 ? void 0 : text.toString();\n          setAllChats(prev => ({\n            ...prev,\n            [senderId]: [...(prev[senderId] || []), {\n              senderId,\n              message: actualMessage\n            }]\n          }));\n\n          // Show notification if chat not open\n          if (!selectedUser || selectedUser.id !== senderId) {\n            setNotifications(prev => ({\n              ...prev,\n              [senderId]: (prev[senderId] || 0) + 1\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(\"SignalR connection failed:\", err);\n      }\n    };\n    init();\n    return () => connection.off(\"ReceiveMessage\");\n  }, [currentUser, selectedUser]);\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser) return;\n    if (connection.state !== \"Connected\") {\n      console.warn(\"Connection not ready\");\n      return;\n    }\n    await connection.invoke(\"SendMessage\", selectedUser.id, message);\n\n    // Add message locally\n    setAllChats(prev => ({\n      ...prev,\n      [selectedUser.id]: [...(prev[selectedUser.id] || []), {\n        senderId: currentUser.id,\n        message\n      }]\n    }));\n    setMessage(\"\");\n  };\n  const handleUserClick = user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [user.id]: 0\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded\",\n          onClick: () => {\n            sessionStorage.removeItem(\"currentUser\");\n            onLogout();\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex justify-between items-center p-2 cursor-pointer rounded ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-gray-200\" : \"hover:bg-gray-100\"}`,\n        onClick: () => handleUserClick(user),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), notifications[user.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2\",\n          children: notifications[user.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: selectedUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto border p-2 rounded mb-2 bg-gray-50\",\n          children: (allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-1 ${c.senderId === currentUser.id ? \"text-right text-blue-600\" : \"text-left text-gray-800\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.senderId === currentUser.id ? \"You\" : selectedUser.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), \" \", c.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border p-2 rounded\",\n            value: message,\n            placeholder: \"Type a message...\",\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 p-2 bg-blue-500 text-white rounded disabled:bg-gray-400\",\n            onClick: sendMessage,\n            disabled: !isConnected,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"j8qzKVR/7AkBXovrgkjJQSwwJz0=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","isConnected","setIsConnected","init","onreconnected","onclose","state","invoke","id","res","fetch","data","json","filter","u","on","senderId","text","actualMessage","toString","prev","err","console","error","off","sendMessage","trim","warn","handleUserClick","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sessionStorage","removeItem","map","username","c","i","value","placeholder","onChange","e","target","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [notifications, setNotifications] = useState({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        await startConnection();\r\n\r\n        connection.onreconnected(() => setIsConnected(true));\r\n        connection.onclose(() => setIsConnected(false));\r\n        if (connection.state === \"Connected\") setIsConnected(true);\r\n\r\n        // Login current user\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        // Fetch all users except current one\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter((u) => u.id !== currentUser.id));\r\n\r\n        // Handle received messages\r\n        connection.on(\"ReceiveMessage\", (senderId, text) => {\r\n          // Handle if backend sends text as object or value (fix for '1' issue)\r\n          const actualMessage =\r\n            typeof text === \"object\" ? text.message || \"\" : text?.toString();\r\n\r\n          setAllChats((prev) => ({\r\n            ...prev,\r\n            [senderId]: [\r\n              ...(prev[senderId] || []),\r\n              { senderId, message: actualMessage },\r\n            ],\r\n          }));\r\n\r\n          // Show notification if chat not open\r\n          if (!selectedUser || selectedUser.id !== senderId) {\r\n            setNotifications((prev) => ({\r\n              ...prev,\r\n              [senderId]: (prev[senderId] || 0) + 1,\r\n            }));\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error(\"SignalR connection failed:\", err);\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    return () => connection.off(\"ReceiveMessage\");\r\n  }, [currentUser, selectedUser]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim() || !selectedUser) return;\r\n    if (connection.state !== \"Connected\") {\r\n      console.warn(\"Connection not ready\");\r\n      return;\r\n    }\r\n\r\n    await connection.invoke(\"SendMessage\", selectedUser.id, message);\r\n\r\n    // Add message locally\r\n    setAllChats((prev) => ({\r\n      ...prev,\r\n      [selectedUser.id]: [\r\n        ...(prev[selectedUser.id] || []),\r\n        { senderId: currentUser.id, message },\r\n      ],\r\n    }));\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    setSelectedUser(user);\r\n    setNotifications((prev) => ({ ...prev, [user.id]: 0 }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"font-bold\">Users</h2>\r\n          <button\r\n            className=\"text-sm bg-red-500 text-white px-2 py-1 rounded\"\r\n            onClick={() => {\r\n              sessionStorage.removeItem(\"currentUser\");\r\n              onLogout();\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        {users.map((user) => (\r\n          <div\r\n            key={user.id}\r\n            className={`flex justify-between items-center p-2 cursor-pointer rounded ${\r\n              selectedUser?.id === user.id ? \"bg-gray-200\" : \"hover:bg-gray-100\"\r\n            }`}\r\n            onClick={() => handleUserClick(user)}\r\n          >\r\n            <span>{user.username}</span>\r\n            {notifications[user.id] > 0 && (\r\n              <span className=\"bg-red-500 text-white rounded-full text-xs px-2\">\r\n                {notifications[user.id]}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <h2 className=\"font-bold mb-2\">{selectedUser.username}</h2>\r\n            <div className=\"flex-1 overflow-y-auto border p-2 rounded mb-2 bg-gray-50\">\r\n              {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={`mb-1 ${\r\n                    c.senderId === currentUser.id\r\n                      ? \"text-right text-blue-600\"\r\n                      : \"text-left text-gray-800\"\r\n                  }`}\r\n                >\r\n                  <strong>\r\n                    {c.senderId === currentUser.id ? \"You\" : selectedUser.username}:\r\n                  </strong>{\" \"}\r\n                  {c.message}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <input\r\n                className=\"flex-1 border p-2 rounded\"\r\n                value={message}\r\n                placeholder=\"Type a message...\"\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n              />\r\n              <button\r\n                className=\"ml-2 p-2 bg-blue-500 text-white rounded disabled:bg-gray-400\"\r\n                onClick={sendMessage}\r\n                disabled={!isConnected}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400\">\r\n            Select a user to start chat\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}