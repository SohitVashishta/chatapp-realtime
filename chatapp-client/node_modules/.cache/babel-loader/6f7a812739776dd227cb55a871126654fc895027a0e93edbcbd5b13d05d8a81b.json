{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n\n  // ✅ Initialize connection & listeners\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await startConnection();\n\n        // Connection state handlers\n        connection.onreconnected(() => setIsConnected(true));\n        connection.onclose(() => setIsConnected(false));\n        if (connection.state === \"Connected\" || connection.state === 1) setIsConnected(true);\n\n        // Register the user on SignalR\n        await connection.invoke(\"Login\", currentUser.id);\n\n        // Fetch all users (excluding current)\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n\n        // ✅ Receive messages\n        connection.on(\"ReceiveMessage\", (senderId, messageText) => {\n          console.log(\"Received:\", senderId, messageText);\n\n          // Determine the correct key (other user)\n          const otherUserId = senderId === currentUser.id ? selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id : senderId;\n\n          // Create message object\n          const msg = {\n            senderId,\n            message: (messageText === null || messageText === void 0 ? void 0 : messageText.toString()) || \"\"\n          };\n\n          // Update chat messages\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n\n          // Add notification if chat not open\n          if (!selectedUser || selectedUser.id !== senderId) {\n            setNotifications(prev => ({\n              ...prev,\n              [senderId]: (prev[senderId] || 0) + 1\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(\"SignalR connection failed:\", err);\n      }\n    };\n    init();\n\n    // Cleanup handler\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser, selectedUser]);\n\n  // ✅ Send message\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser) return;\n    if (connection.state !== \"Connected\" && connection.state !== 1) {\n      console.warn(\"Connection not ready\");\n      return;\n    }\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\n\n      // Add locally (for sender)\n      const msg = {\n        senderId: currentUser.id,\n        message\n      };\n      setAllChats(prev => ({\n        ...prev,\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), msg]\n      }));\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"SendMessage failed:\", err);\n    }\n  };\n\n  // ✅ Handle user click\n  const handleUserClick = user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [user.id]: 0\n    }));\n  };\n\n  // ✅ Logout\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(user),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), notifications[user.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[user.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4 bg-white\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2 text-lg border-b pb-2\",\n          children: [\"Chat with \", selectedUser.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto border p-3 rounded mb-2 bg-gray-50 shadow-inner\",\n          children: (allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-2 ${c.senderId === currentUser.id ? \"text-right text-blue-600\" : \"text-left text-gray-800\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.senderId === currentUser.id ? \"You\" : selectedUser.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), \" \", c.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border p-2 rounded\",\n            placeholder: \"Type a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: !isConnected || !selectedUser,\n            className: `ml-2 px-4 py-2 rounded text-white ${isConnected ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"j8qzKVR/7AkBXovrgkjJQSwwJz0=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","isConnected","setIsConnected","init","onreconnected","onclose","state","invoke","id","res","fetch","data","json","filter","u","on","senderId","messageText","console","log","otherUserId","msg","toString","prev","err","error","off","sendMessage","trim","warn","handleUserClick","user","handleLogoutClick","sessionStorage","removeItem","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","c","i","placeholder","value","onChange","e","target","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [notifications, setNotifications] = useState({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  // ✅ Initialize connection & listeners\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        await startConnection();\r\n\r\n        // Connection state handlers\r\n        connection.onreconnected(() => setIsConnected(true));\r\n        connection.onclose(() => setIsConnected(false));\r\n        if (connection.state === \"Connected\" || connection.state === 1)\r\n          setIsConnected(true);\r\n\r\n        // Register the user on SignalR\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        // Fetch all users (excluding current)\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter((u) => u.id !== currentUser.id));\r\n\r\n        // ✅ Receive messages\r\n        connection.on(\"ReceiveMessage\", (senderId, messageText) => {\r\n          console.log(\"Received:\", senderId, messageText);\r\n\r\n          // Determine the correct key (other user)\r\n          const otherUserId =\r\n            senderId === currentUser.id ? selectedUser?.id : senderId;\r\n\r\n          // Create message object\r\n          const msg = {\r\n            senderId,\r\n            message: messageText?.toString() || \"\",\r\n          };\r\n\r\n          // Update chat messages\r\n          setAllChats((prev) => ({\r\n            ...prev,\r\n            [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n          }));\r\n\r\n          // Add notification if chat not open\r\n          if (!selectedUser || selectedUser.id !== senderId) {\r\n            setNotifications((prev) => ({\r\n              ...prev,\r\n              [senderId]: (prev[senderId] || 0) + 1,\r\n            }));\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error(\"SignalR connection failed:\", err);\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    // Cleanup handler\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser, selectedUser]);\r\n\r\n  // ✅ Send message\r\n  const sendMessage = async () => {\r\n    if (!message.trim() || !selectedUser) return;\r\n\r\n    if (connection.state !== \"Connected\" && connection.state !== 1) {\r\n      console.warn(\"Connection not ready\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\r\n\r\n      // Add locally (for sender)\r\n      const msg = { senderId: currentUser.id, message };\r\n      setAllChats((prev) => ({\r\n        ...prev,\r\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), msg],\r\n      }));\r\n\r\n      setMessage(\"\");\r\n    } catch (err) {\r\n      console.error(\"SendMessage failed:\", err);\r\n    }\r\n  };\r\n\r\n  // ✅ Handle user click\r\n  const handleUserClick = (user) => {\r\n    setSelectedUser(user);\r\n    setNotifications((prev) => ({ ...prev, [user.id]: 0 }));\r\n  };\r\n\r\n  // ✅ Logout\r\n  const handleLogoutClick = () => {\r\n    sessionStorage.removeItem(\"currentUser\");\r\n    onLogout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-gray-50\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n          <button\r\n            onClick={handleLogoutClick}\r\n            className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        {/* Users list */}\r\n        {users.map((user) => (\r\n          <div\r\n            key={user.id}\r\n            onClick={() => handleUserClick(user)}\r\n            className={`flex justify-between items-center p-2 rounded cursor-pointer ${\r\n              selectedUser?.id === user.id\r\n                ? \"bg-blue-100\"\r\n                : \"hover:bg-gray-200\"\r\n            }`}\r\n          >\r\n            <span className=\"font-medium\">{user.username}</span>\r\n            {notifications[user.id] > 0 && (\r\n              <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">\r\n                {notifications[user.id]}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4 bg-white\">\r\n        {selectedUser ? (\r\n          <>\r\n            <h2 className=\"font-bold mb-2 text-lg border-b pb-2\">\r\n              Chat with {selectedUser.username}\r\n            </h2>\r\n            <div className=\"flex-1 overflow-y-auto border p-3 rounded mb-2 bg-gray-50 shadow-inner\">\r\n              {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={`mb-2 ${\r\n                    c.senderId === currentUser.id\r\n                      ? \"text-right text-blue-600\"\r\n                      : \"text-left text-gray-800\"\r\n                  }`}\r\n                >\r\n                  <strong>\r\n                    {c.senderId === currentUser.id ? \"You\" : selectedUser.username}:\r\n                  </strong>{\" \"}\r\n                  {c.message}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Message Input */}\r\n            <div className=\"flex\">\r\n              <input\r\n                className=\"flex-1 border p-2 rounded\"\r\n                placeholder=\"Type a message...\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                disabled={!isConnected || !selectedUser}\r\n                className={`ml-2 px-4 py-2 rounded text-white ${\r\n                  isConnected\r\n                    ? \"bg-blue-500 hover:bg-blue-600\"\r\n                    : \"bg-gray-400 cursor-not-allowed\"\r\n                }`}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">\r\n            Select a user to start chat\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}