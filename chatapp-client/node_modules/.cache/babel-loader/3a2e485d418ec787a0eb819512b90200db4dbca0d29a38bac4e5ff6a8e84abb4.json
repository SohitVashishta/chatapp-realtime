{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n\n  // ✅ Initialize connection & listeners\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await startConnection();\n\n        // Connection state handlers\n        connection.onreconnected(() => setIsConnected(true));\n        connection.onclose(() => setIsConnected(false));\n        if (connection.state === \"Connected\" || connection.state === 1) setIsConnected(true);\n\n        // Register the user on SignalR\n        await connection.invoke(\"Login\", currentUser.id);\n\n        // Fetch all users (excluding current)\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n\n        // Create a map for username lookup\n        const usersMap = Object.fromEntries(data.map(u => [u.id, u.username]));\n\n        // ✅ Receive messages\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText) => {\n          console.log(\"Received:\", senderId, receiverId, messageText);\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\n          const msg = {\n            senderId,\n            message: (messageText === null || messageText === void 0 ? void 0 : messageText.toString()) || \"\",\n            senderUsername: usersMap[senderId] || \"Unknown\"\n          };\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n          if (!selectedUser || selectedUser.id !== senderId) {\n            setNotifications(prev => ({\n              ...prev,\n              [senderId]: (prev[senderId] || 0) + 1\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(\"SignalR connection failed:\", err);\n      }\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser, selectedUser]);\n\n  // ✅ Send message\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser) return;\n    if (connection.state !== \"Connected\" && connection.state !== 1) {\n      console.warn(\"Connection not ready\");\n      return;\n    }\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\n\n      // Add locally (for sender)\n      const msg = {\n        senderId: currentUser.id,\n        message\n      };\n      setAllChats(prev => ({\n        ...prev,\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), msg]\n      }));\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"SendMessage failed:\", err);\n    }\n  };\n\n  // ✅ Handle user click\n  const handleUserClick = user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [user.id]: 0\n    }));\n  };\n\n  // ✅ Logout\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(user),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), notifications[user.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[user.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4 bg-white\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2 text-lg border-b pb-2\",\n          children: [\"Chat with \", selectedUser.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto border p-3 rounded mb-2 bg-gray-50 shadow-inner\",\n          children: (allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-2 ${c.senderId === currentUser.id ? \"text-right text-blue-600\" : \"text-left text-gray-800\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.senderId === currentUser.id ? \"You\" : c.senderUsername, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), \" \", c.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border p-2 rounded\",\n            placeholder: \"Type a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: !isConnected || !selectedUser,\n            className: `ml-2 px-4 py-2 rounded text-white ${isConnected ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"j8qzKVR/7AkBXovrgkjJQSwwJz0=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","isConnected","setIsConnected","init","onreconnected","onclose","state","invoke","id","res","fetch","data","json","filter","u","usersMap","Object","fromEntries","map","username","on","senderId","receiverId","messageText","console","log","otherUserId","msg","toString","senderUsername","prev","err","error","off","sendMessage","trim","warn","handleUserClick","user","handleLogoutClick","sessionStorage","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","c","i","placeholder","value","onChange","e","target","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [allChats, setAllChats] = useState({});\r\n    const [notifications, setNotifications] = useState({});\r\n    const [isConnected, setIsConnected] = useState(false);\r\n\r\n    // ✅ Initialize connection & listeners\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                await startConnection();\r\n\r\n                // Connection state handlers\r\n                connection.onreconnected(() => setIsConnected(true));\r\n                connection.onclose(() => setIsConnected(false));\r\n                if (connection.state === \"Connected\" || connection.state === 1)\r\n                    setIsConnected(true);\r\n\r\n                // Register the user on SignalR\r\n                await connection.invoke(\"Login\", currentUser.id);\r\n\r\n                // Fetch all users (excluding current)\r\n                const res = await fetch(\"http://localhost:5090/api/users\");\r\n                const data = await res.json();\r\n                setUsers(data.filter((u) => u.id !== currentUser.id));\r\n\r\n                // Create a map for username lookup\r\n                const usersMap = Object.fromEntries(data.map(u => [u.id, u.username]));\r\n\r\n                // ✅ Receive messages\r\n                connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText) => {\r\n                    console.log(\"Received:\", senderId, receiverId, messageText);\r\n\r\n                    const otherUserId = senderId === currentUser.id ? receiverId : senderId;\r\n\r\n                    const msg = {\r\n                        senderId,\r\n                        message: messageText?.toString() || \"\",\r\n                        senderUsername: usersMap[senderId] || \"Unknown\",\r\n                    };\r\n\r\n                    setAllChats((prev) => ({\r\n                        ...prev,\r\n                        [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n                    }));\r\n\r\n                    if (!selectedUser || selectedUser.id !== senderId) {\r\n                        setNotifications((prev) => ({\r\n                            ...prev,\r\n                            [senderId]: (prev[senderId] || 0) + 1,\r\n                        }));\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                console.error(\"SignalR connection failed:\", err);\r\n            }\r\n        };\r\n\r\n        init();\r\n\r\n        return () => {\r\n            connection.off(\"ReceiveMessage\");\r\n        };\r\n    }, [currentUser, selectedUser]);\r\n\r\n\r\n    // ✅ Send message\r\n    const sendMessage = async () => {\r\n        if (!message.trim() || !selectedUser) return;\r\n\r\n        if (connection.state !== \"Connected\" && connection.state !== 1) {\r\n            console.warn(\"Connection not ready\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await connection.invoke(\"SendMessage\", selectedUser.id, message);\r\n\r\n            // Add locally (for sender)\r\n            const msg = { senderId: currentUser.id, message };\r\n            setAllChats((prev) => ({\r\n                ...prev,\r\n                [selectedUser.id]: [...(prev[selectedUser.id] || []), msg],\r\n            }));\r\n\r\n            setMessage(\"\");\r\n        } catch (err) {\r\n            console.error(\"SendMessage failed:\", err);\r\n        }\r\n    };\r\n\r\n    // ✅ Handle user click\r\n    const handleUserClick = (user) => {\r\n        setSelectedUser(user);\r\n        setNotifications((prev) => ({ ...prev, [user.id]: 0 }));\r\n    };\r\n\r\n    // ✅ Logout\r\n    const handleLogoutClick = () => {\r\n        sessionStorage.removeItem(\"currentUser\");\r\n        onLogout();\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen\">\r\n            {/* Sidebar */}\r\n            <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-gray-50\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n                    <button\r\n                        onClick={handleLogoutClick}\r\n                        className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Users list */}\r\n                {users.map((user) => (\r\n                    <div\r\n                        key={user.id}\r\n                        onClick={() => handleUserClick(user)}\r\n                        className={`flex justify-between items-center p-2 rounded cursor-pointer ${selectedUser?.id === user.id\r\n                                ? \"bg-blue-100\"\r\n                                : \"hover:bg-gray-200\"\r\n                            }`}\r\n                    >\r\n                        <span className=\"font-medium\">{user.username}</span>\r\n                        {notifications[user.id] > 0 && (\r\n                            <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">\r\n                                {notifications[user.id]}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Chat Area */}\r\n            <div className=\"flex-1 flex flex-col p-4 bg-white\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <h2 className=\"font-bold mb-2 text-lg border-b pb-2\">\r\n                            Chat with {selectedUser.username}\r\n                        </h2>\r\n                        <div className=\"flex-1 overflow-y-auto border p-3 rounded mb-2 bg-gray-50 shadow-inner\">\r\n                            {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                                <div\r\n                                    key={i}\r\n                                    className={`mb-2 ${c.senderId === currentUser.id\r\n                                            ? \"text-right text-blue-600\"\r\n                                            : \"text-left text-gray-800\"\r\n                                        }`}\r\n                                >\r\n                                    <strong>\r\n                                        {c.senderId === currentUser.id ? \"You\" : c.senderUsername}:\r\n                                    </strong>{\" \"}\r\n                                    {c.message}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* Message Input */}\r\n                        <div className=\"flex\">\r\n                            <input\r\n                                className=\"flex-1 border p-2 rounded\"\r\n                                placeholder=\"Type a message...\"\r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n                            />\r\n                            <button\r\n                                onClick={sendMessage}\r\n                                disabled={!isConnected || !selectedUser}\r\n                                className={`ml-2 px-4 py-2 rounded text-white ${isConnected\r\n                                        ? \"bg-blue-500 hover:bg-blue-600\"\r\n                                        : \"bg-gray-400 cursor-not-allowed\"\r\n                                    }`}\r\n                            >\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">\r\n                        Select a user to start chat\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}