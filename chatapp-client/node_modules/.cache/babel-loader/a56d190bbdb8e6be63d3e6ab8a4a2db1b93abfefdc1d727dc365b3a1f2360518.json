{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\n  const messagesEndRef = useRef(null);\n  const API_URL = process.env.REACT_APP_API_URL;\n  // Scroll to bottom on new messages\n  useEffect(() => {\n    if (messagesEndRef.current) messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [allChats, selectedUser]);\n\n  // Initialize SignalR\n  useEffect(() => {\n    const init = async () => {\n      try {\n        if (connection.state !== \"Connected\") await startConnection();\n        if (connection.state === \"Connected\") await connection.invoke(\"Login\", currentUser.id);else {\n          setTimeout(init, 1000);\n          return;\n        }\n\n        // Remove old listener and add new one\n        connection.off(\"ReceiveMessage\");\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName) => {\n          // ⚠️ Skip if current user is sender (because message already added locally)\n          if (senderId === currentUser.id) return;\n          const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\n          const msg = {\n            senderId,\n            type: messageType || \"text\",\n            fileName,\n            senderUsername: senderId === currentUser.id ? currentUser.username : \"Other\",\n            message: messageText\n          };\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n          if (!selectedUser || String(selectedUser.id) !== otherUserId) {\n            setNotifications(prev => ({\n              ...prev,\n              [otherUserId]: (prev[otherUserId] || 0) + 1\n            }));\n          }\n        });\n\n        // Fetch users\n        const res = await fetch(`${API_URL}/api/users`);\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    init();\n    return () => connection.off(\"ReceiveMessage\");\n  }, [currentUser]);\n\n  // ✅ Send text or file messages\n  const sendMessage = async (msg, type = \"text\", fileName = null) => {\n    if (!msg && type === \"text\" || !selectedUser) return;\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName);\n\n      // Add message locally so sender sees it instantly\n      const newMsg = {\n        senderId: currentUser.id,\n        receiverId: selectedUser.id,\n        message: msg,\n        type,\n        fileName\n      };\n      setAllChats(prev => ({\n        ...prev,\n        [String(selectedUser.id)]: [...(prev[String(selectedUser.id)] || []), newMsg]\n      }));\n      if (type === \"text\") setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const fetchMessages = async user => {\n    const res = await fetch(`${API_URL}/api/users/messages/${currentUser.id}/${user.id}`);\n    const msgs = await res.json();\n    const formatted = msgs.map(m => ({\n      senderId: m.senderId,\n      type: m.type || \"text\",\n      fileName: m.fileName,\n      senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username,\n      message: m.type === \"text\" ? m.text : m.fileBase64 || \"\"\n    }));\n    setAllChats(prev => ({\n      ...prev,\n      [String(user.id)]: formatted\n    }));\n  };\n  const handleUserClick = async user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [String(user.id)]: 0\n    }));\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\n    await fetchMessages(user);\n  };\n\n  // Restore last selected user\n  useEffect(() => {\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\n  }, []);\n\n  // ✅ Handle file uploads (image or other)\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file || !selectedUser) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"senderId\", currentUser.id);\n    formData.append(\"receiverId\", selectedUser.id);\n    try {\n      const res = await fetch(`${API_URL}/api/files/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n\n      // Now send via SignalR\n      await sendMessage(data.fileBase64, data.type, file.name);\n    } catch (err) {\n      console.error(\"File upload failed:\", err);\n    }\n    e.target.value = null;\n  };\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"lastSelectedUser\");\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(u),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: u.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), notifications[String(u.id)] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[String(u.id)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg border-b pb-2\",\n            children: selectedUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: chatBackground,\n            onChange: e => setChatBackground(e.target.value),\n            className: \"w-10 h-8 rounded cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\",\n          style: {\n            backgroundColor: chatBackground\n          },\n          children: [(allChats[String(selectedUser.id)] || []).map((c, i) => {\n            let content;\n            if (c.type === \"text\") {\n              content = /*#__PURE__*/_jsxDEV(\"span\", {\n                children: c.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 47\n              }, this);\n            } else if (c.type === \"image\" && c.message) {\n              content = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-[250px] h-[200px] overflow-hidden rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: c.message.startsWith(\"data:\") ? c.message : `data:image/jpeg;base64,${c.message}`,\n                  alt: \"sent\",\n                  className: \"object-cover w-full h-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this);\n            } else if (c.type === \"file\" && c.message) {\n              content = /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `data:application/octet-stream;base64,${c.message}`,\n                download: c.fileName,\n                className: \"underline text-blue-700\",\n                children: c.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"}`,\n              children: content\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"Message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(message, \"text\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCF8\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange,\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(message, \"text\"),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"sHy7gC8uTIgZ4ccUrONdCUzuna4=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","chatBackground","setChatBackground","messagesEndRef","API_URL","process","env","REACT_APP_API_URL","current","scrollIntoView","behavior","init","state","invoke","id","setTimeout","off","on","senderId","receiverId","messageText","messageType","fileName","otherUserId","String","msg","type","senderUsername","username","prev","res","fetch","data","json","filter","u","err","console","error","sendMessage","newMsg","fetchMessages","user","msgs","formatted","map","m","text","fileBase64","handleUserClick","sessionStorage","setItem","JSON","stringify","lastUser","getItem","parse","handleFileChange","e","file","target","files","formData","FormData","append","method","body","name","value","handleLogoutClick","removeItem","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onChange","style","backgroundColor","c","i","content","src","startsWith","alt","href","download","ref","placeholder","onKeyDown","key","accept","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [allChats, setAllChats] = useState({});\r\n    const [notifications, setNotifications] = useState({});\r\n    const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\r\n    const messagesEndRef = useRef(null);\r\n    const API_URL = process.env.REACT_APP_API_URL;\r\n    // Scroll to bottom on new messages\r\n    useEffect(() => {\r\n        if (messagesEndRef.current)\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [allChats, selectedUser]);\r\n\r\n    // Initialize SignalR\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                if (connection.state !== \"Connected\") await startConnection();\r\n\r\n                if (connection.state === \"Connected\")\r\n                    await connection.invoke(\"Login\", currentUser.id);\r\n                else {\r\n                    setTimeout(init, 1000);\r\n                    return;\r\n                }\r\n\r\n                // Remove old listener and add new one\r\n                connection.off(\"ReceiveMessage\");\r\n                connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName) => {\r\n                    // ⚠️ Skip if current user is sender (because message already added locally)\r\n                    if (senderId === currentUser.id) return;\r\n\r\n                    const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\r\n\r\n                    const msg = {\r\n                        senderId,\r\n                        type: messageType || \"text\",\r\n                        fileName,\r\n                        senderUsername: senderId === currentUser.id ? currentUser.username : \"Other\",\r\n                        message: messageText,\r\n                    };\r\n\r\n                    setAllChats((prev) => ({\r\n                        ...prev,\r\n                        [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n                    }));\r\n\r\n                    if (!selectedUser || String(selectedUser.id) !== otherUserId) {\r\n                        setNotifications((prev) => ({\r\n                            ...prev,\r\n                            [otherUserId]: (prev[otherUserId] || 0) + 1,\r\n                        }));\r\n                    }\r\n                });\r\n\r\n\r\n                // Fetch users\r\n                const res = await fetch(`${API_URL}/api/users`);\r\n                const data = await res.json();\r\n                setUsers(data.filter((u) => u.id !== currentUser.id));\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        init();\r\n\r\n        return () => connection.off(\"ReceiveMessage\");\r\n    }, [currentUser]);\r\n\r\n    // ✅ Send text or file messages\r\n    const sendMessage = async (msg, type = \"text\", fileName = null) => {\r\n        if ((!msg && type === \"text\") || !selectedUser) return;\r\n\r\n        try {\r\n            await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName);\r\n\r\n            // Add message locally so sender sees it instantly\r\n            const newMsg = {\r\n                senderId: currentUser.id,\r\n                receiverId: selectedUser.id,\r\n                message: msg,\r\n                type,\r\n                fileName,\r\n            };\r\n\r\n            setAllChats((prev) => ({\r\n                ...prev,\r\n                [String(selectedUser.id)]: [...(prev[String(selectedUser.id)] || []), newMsg],\r\n            }));\r\n\r\n            if (type === \"text\") setMessage(\"\");\r\n        } catch (error) {\r\n            console.error(\"Error sending message:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async (user) => {\r\n        const res = await fetch(`${API_URL}/api/users/messages/${currentUser.id}/${user.id}`);\r\n        const msgs = await res.json();\r\n\r\n        const formatted = msgs.map((m) => ({\r\n            senderId: m.senderId,\r\n            type: m.type || \"text\",\r\n            fileName: m.fileName,\r\n            senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username,\r\n            message: m.type === \"text\" ? m.text : m.fileBase64 || \"\",\r\n        }));\r\n\r\n        setAllChats((prev) => ({\r\n            ...prev,\r\n            [String(user.id)]: formatted,\r\n        }));\r\n    };\r\n\r\n    const handleUserClick = async (user) => {\r\n        setSelectedUser(user);\r\n        setNotifications((prev) => ({ ...prev, [String(user.id)]: 0 }));\r\n        sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\r\n        await fetchMessages(user);\r\n    };\r\n\r\n    // Restore last selected user\r\n    useEffect(() => {\r\n        const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\r\n        if (lastUser) handleUserClick(JSON.parse(lastUser));\r\n    }, []);\r\n\r\n    // ✅ Handle file uploads (image or other)\r\n    const handleFileChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file || !selectedUser) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"senderId\", currentUser.id);\r\n        formData.append(\"receiverId\", selectedUser.id);\r\n\r\n        try {\r\n            const res = await fetch(`${API_URL}/api/files/upload`, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n            const data = await res.json();\r\n\r\n            // Now send via SignalR\r\n            await sendMessage(data.fileBase64, data.type, file.name);\r\n        } catch (err) {\r\n            console.error(\"File upload failed:\", err);\r\n        }\r\n\r\n        e.target.value = null;\r\n    };\r\n\r\n    const handleLogoutClick = () => {\r\n        sessionStorage.removeItem(\"currentUser\");\r\n        sessionStorage.removeItem(\"lastSelectedUser\");\r\n        onLogout();\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100\">\r\n            {/* Users List */}\r\n            <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n                    <button\r\n                        onClick={handleLogoutClick}\r\n                        className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n                {users.map((u) => (\r\n                    <div\r\n                        key={u.id}\r\n                        onClick={() => handleUserClick(u)}\r\n                        className={`flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${selectedUser?.id === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"\r\n                            }`}\r\n                    >\r\n                        <span className=\"font-medium\">{u.username}</span>\r\n                        {notifications[String(u.id)] > 0 && (\r\n                            <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">\r\n                                {notifications[String(u.id)]}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Chat Window */}\r\n            <div className=\"flex-1 flex flex-col p-4\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <div className=\"flex justify-between items-center mb-2\">\r\n                            <h2 className=\"font-bold text-lg border-b pb-2\">{selectedUser.username}</h2>\r\n                            <input\r\n                                type=\"color\"\r\n                                value={chatBackground}\r\n                                onChange={(e) => setChatBackground(e.target.value)}\r\n                                className=\"w-10 h-8 rounded cursor-pointer\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\"\r\n                            style={{ backgroundColor: chatBackground }}\r\n                        >\r\n                            {(allChats[String(selectedUser.id)] || []).map((c, i) => {\r\n                                let content;\r\n\r\n                                if (c.type === \"text\") {\r\n                                    content = <span>{c.message}</span>;\r\n                                } else if (c.type === \"image\" && c.message) {\r\n                                    content = (\r\n                                        <div className=\"w-[250px] h-[200px] overflow-hidden rounded-lg\">\r\n                                            <img\r\n                                                src={\r\n                                                    c.message.startsWith(\"data:\")\r\n                                                        ? c.message\r\n                                                        : `data:image/jpeg;base64,${c.message}`\r\n                                                }\r\n                                                alt=\"sent\"\r\n                                                className=\"object-cover w-full h-full\"\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                } else if (c.type === \"file\" && c.message) {\r\n                                    content = (\r\n                                        <a\r\n                                            href={`data:application/octet-stream;base64,${c.message}`}\r\n                                            download={c.fileName}\r\n                                            className=\"underline text-blue-700\"\r\n                                        >\r\n                                            {c.fileName}\r\n                                        </a>\r\n                                    );\r\n                                }\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={i}\r\n                                        className={`max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id\r\n                                                ? \"self-end bg-blue-500 text-white\"\r\n                                                : \"self-start bg-white text-gray-800\"\r\n                                            }`}\r\n                                    >\r\n                                        {content}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n\r\n                            <div ref={messagesEndRef} />\r\n                        </div>\r\n\r\n                        {/* Input */}\r\n                        <div className=\"flex items-center space-x-2 mt-2\">\r\n                            <input\r\n                                className=\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                                placeholder=\"Message...\"\r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                onKeyDown={(e) => e.key === \"Enter\" && sendMessage(message, \"text\")}\r\n                            />\r\n                            <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                                📎\r\n                                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} />\r\n                            </label>\r\n                            <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                                📸\r\n                                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} accept=\"image/*\" />\r\n                            </label>\r\n                            <button\r\n                                onClick={() => sendMessage(message, \"text\")}\r\n                                className=\"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\"\r\n                            >\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">\r\n                        Select a user to start chat\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}