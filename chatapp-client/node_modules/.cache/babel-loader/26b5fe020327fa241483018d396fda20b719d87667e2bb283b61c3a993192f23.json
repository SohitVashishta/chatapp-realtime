{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [receiverId, setReceiverId] = useState(0); // 0 = group chat\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      await startConnection();\n\n      // login current user on SignalR\n      await connection.invoke(\"Login\", currentUser.id);\n\n      // fetch all users\n      const res = await fetch(\"http://localhost:5090/api/users\");\n      const data = await res.json();\n      setUsers(data);\n\n      // listen for messages\n      connection.on(\"ReceiveMessage\", (senderId, message) => {\n        setChat(prev => [...prev, {\n          senderId,\n          message\n        }]);\n      });\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser]);\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    if (connection.state === 1) {\n      // Connected\n      await connection.invoke(\"SendMessage\", receiverId, message);\n      setMessage(\"\");\n    } else {\n      console.warn(\"Connection not ready\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-4\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 cursor-pointer ${receiverId === user.id ? \"bg-gray-200\" : \"\"}`,\n        onClick: () => setReceiverId(user.id),\n        children: user.username\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto border p-2 rounded mb-2\",\n        children: chat.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [c.senderId, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), c.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 border p-2 rounded\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"BuNT5RWYAlm3m2n7m4chqKc0/sE=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","ChatWindow","currentUser","_s","users","setUsers","receiverId","setReceiverId","message","setMessage","chat","setChat","init","invoke","id","res","fetch","data","json","on","senderId","prev","off","sendMessage","trim","state","console","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","username","c","i","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["// src/components/ChatWindow.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [receiverId, setReceiverId] = useState(0); // 0 = group chat\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await startConnection();\r\n\r\n      // login current user on SignalR\r\n      await connection.invoke(\"Login\", currentUser.id);\r\n\r\n      // fetch all users\r\n      const res = await fetch(\"http://localhost:5090/api/users\");\r\n      const data = await res.json();\r\n      setUsers(data);\r\n\r\n      // listen for messages\r\n      connection.on(\"ReceiveMessage\", (senderId, message) => {\r\n        setChat(prev => [...prev, { senderId, message }]);\r\n      });\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n    if (connection.state === 1) { // Connected\r\n      await connection.invoke(\"SendMessage\", receiverId, message);\r\n      setMessage(\"\");\r\n    } else {\r\n      console.warn(\"Connection not ready\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* User List */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto\">\r\n        <h2 className=\"font-bold mb-4\">Users</h2>\r\n        {users.map(user => (\r\n          <div\r\n            key={user.id}\r\n            className={`p-2 cursor-pointer ${receiverId === user.id ? \"bg-gray-200\" : \"\"}`}\r\n            onClick={() => setReceiverId(user.id)}\r\n          >\r\n            {user.username}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        <div className=\"flex-1 overflow-y-auto border p-2 rounded mb-2\">\r\n          {chat.map((c, i) => (\r\n            <div key={i} className={`${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`}>\r\n              <strong>{c.senderId}: </strong>{c.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex\">\r\n          <input\r\n            className=\"flex-1 border p-2 rounded\"\r\n            value={message}\r\n            onChange={e => setMessage(e.target.value)}\r\n            onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n          />\r\n          <button className=\"ml-2 p-2 bg-blue-500 text-white rounded\" onClick={sendMessage}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}