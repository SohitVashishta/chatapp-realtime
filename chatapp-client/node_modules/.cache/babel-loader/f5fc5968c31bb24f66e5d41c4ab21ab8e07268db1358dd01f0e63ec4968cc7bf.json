{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await startConnection();\n        setIsConnected(true); // Connection ready\n\n        // login current user\n        await connection.invoke(\"Login\", currentUser.id);\n\n        // fetch users (excluding self)\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n\n        // listen for messages\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, text) => {\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), {\n              senderId,\n              message: text\n            }]\n          }));\n\n          // increment notification if chat not open\n          if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) !== otherUserId) {\n            setNotifications(prev => ({\n              ...prev,\n              [otherUserId]: (prev[otherUserId] || 0) + 1\n            }));\n          }\n        });\n\n        // reconnect / disconnect handlers\n        connection.onreconnected(() => setIsConnected(true));\n        connection.onclose(() => setIsConnected(false));\n      } catch (err) {\n        console.error(\"SignalR init failed:\", err);\n        setIsConnected(false);\n      }\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser, selectedUser]);\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser) return;\n    if (!isConnected) {\n      console.warn(\"Connection not ready\");\n      return;\n    }\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\n\n      // update local chat immediately\n      setAllChats(prev => ({\n        ...prev,\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), {\n          senderId: currentUser.id,\n          message\n        }]\n      }));\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"Failed to send message:\", err);\n    }\n  };\n  const selectUser = user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [user.id]: 0\n    })); // clear notifications\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-4\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 cursor-pointer flex justify-between items-center ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-gray-200\" : \"\"}`,\n        onClick: () => selectUser(user),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), notifications[user.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs bg-red-500 text-white px-2 rounded-full\",\n          children: notifications[user.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: selectedUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto border p-2 rounded mb-2\",\n          children: (allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.senderId === currentUser.id ? \"You\" : selectedUser.username, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), c.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border p-2 rounded\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n            disabled: !isConnected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 p-2 bg-blue-500 text-white rounded disabled:opacity-50\",\n            onClick: sendMessage,\n            disabled: !isConnected || !message.trim(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-500\",\n        children: \"Select a user to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"j8qzKVR/7AkBXovrgkjJQSwwJz0=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","isConnected","setIsConnected","init","invoke","id","res","fetch","data","json","filter","u","on","senderId","receiverId","text","otherUserId","prev","onreconnected","onclose","err","console","error","off","sendMessage","trim","warn","selectUser","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","username","c","i","value","onChange","e","target","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["// src/components/ChatWindow.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [notifications, setNotifications] = useState({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        await startConnection();\r\n        setIsConnected(true); // Connection ready\r\n\r\n        // login current user\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        // fetch users (excluding self)\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter(u => u.id !== currentUser.id));\r\n\r\n        // listen for messages\r\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, text) => {\r\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\r\n\r\n          setAllChats(prev => ({\r\n            ...prev,\r\n            [otherUserId]: [...(prev[otherUserId] || []), { senderId, message: text }]\r\n          }));\r\n\r\n          // increment notification if chat not open\r\n          if (selectedUser?.id !== otherUserId) {\r\n            setNotifications(prev => ({\r\n              ...prev,\r\n              [otherUserId]: (prev[otherUserId] || 0) + 1\r\n            }));\r\n          }\r\n        });\r\n\r\n        // reconnect / disconnect handlers\r\n        connection.onreconnected(() => setIsConnected(true));\r\n        connection.onclose(() => setIsConnected(false));\r\n\r\n      } catch (err) {\r\n        console.error(\"SignalR init failed:\", err);\r\n        setIsConnected(false);\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser, selectedUser]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim() || !selectedUser) return;\r\n\r\n    if (!isConnected) {\r\n      console.warn(\"Connection not ready\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\r\n\r\n      // update local chat immediately\r\n      setAllChats(prev => ({\r\n        ...prev,\r\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), { senderId: currentUser.id, message }]\r\n      }));\r\n\r\n      setMessage(\"\");\r\n    } catch (err) {\r\n      console.error(\"Failed to send message:\", err);\r\n    }\r\n  };\r\n\r\n  const selectUser = (user) => {\r\n    setSelectedUser(user);\r\n    setNotifications(prev => ({ ...prev, [user.id]: 0 })); // clear notifications\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* User List */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto\">\r\n        <h2 className=\"font-bold mb-4\">Users</h2>\r\n        {users.map(user => (\r\n          <div\r\n            key={user.id}\r\n            className={`p-2 cursor-pointer flex justify-between items-center ${selectedUser?.id === user.id ? \"bg-gray-200\" : \"\"}`}\r\n            onClick={() => selectUser(user)}\r\n          >\r\n            <span>{user.username}</span>\r\n            {notifications[user.id] > 0 && (\r\n              <span className=\"text-xs bg-red-500 text-white px-2 rounded-full\">{notifications[user.id]}</span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <h2 className=\"font-bold mb-2\">{selectedUser.username}</h2>\r\n            <div className=\"flex-1 overflow-y-auto border p-2 rounded mb-2\">\r\n              {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                <div key={i} className={`${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`}>\r\n                  <strong>{c.senderId === currentUser.id ? \"You\" : selectedUser.username}: </strong>\r\n                  {c.message}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <input\r\n                className=\"flex-1 border p-2 rounded\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n                onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n                disabled={!isConnected}\r\n              />\r\n              <button\r\n                className=\"ml-2 p-2 bg-blue-500 text-white rounded disabled:opacity-50\"\r\n                onClick={sendMessage}\r\n                disabled={!isConnected || !message.trim()}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n            Select a user to chat\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}