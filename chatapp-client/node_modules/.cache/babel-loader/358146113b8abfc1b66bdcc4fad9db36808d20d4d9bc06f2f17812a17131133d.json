{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [allChats, selectedUser]);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        if (connection.state === \"Disconnected\" || connection.state === 0) {\n          await startConnection();\n        }\n        connection.off(\"ReceiveMessage\");\n        connection.onreconnected(() => setIsConnected(true));\n        connection.onclose(() => setIsConnected(false));\n        if (connection.state === \"Connected\" || connection.state === 1) setIsConnected(true);\n        await connection.invoke(\"Login\", currentUser.id);\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n        const usersMap = Object.fromEntries(data.map(u => [u.id, u.username]));\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType) => {\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\n          const msg = {\n            senderId,\n            message: (messageText === null || messageText === void 0 ? void 0 : messageText.toString()) || \"\",\n            type: messageType || \"text\",\n            // 'text' | 'image' | 'file'\n            senderUsername: usersMap[senderId] || \"Unknown\"\n          };\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n          if (!selectedUser || selectedUser.id !== senderId) {\n            setNotifications(prev => ({\n              ...prev,\n              [senderId]: (prev[senderId] || 0) + 1\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(\"SignalR connection failed:\", err);\n      }\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser]);\n\n  // Send a message (text/file/image)\n  const sendMessage = async (messageText, messageType = \"text\") => {\n    if ((!messageText || !messageText.trim()) && messageType === \"text\") return;\n    if (!selectedUser) return;\n    if (connection.state !== \"Connected\" && connection.state !== 1) return;\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, messageText, messageType);\n      const msg = {\n        senderId: currentUser.id,\n        message: messageText,\n        type: messageType,\n        senderUsername: currentUser.username\n      };\n      setAllChats(prev => ({\n        ...prev,\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), msg]\n      }));\n      if (messageType === \"text\") setMessage(\"\");\n    } catch (err) {\n      console.error(\"SendMessage failed:\", err);\n    }\n  };\n  const handleUserClick = async user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [user.id]: 0\n    }));\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\n    try {\n      const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\n      const msgs = await res.json();\n      const formatted = msgs.map(m => ({\n        senderId: m.senderId,\n        message: m.text,\n        type: m.type || \"text\",\n        senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username\n      }));\n      setAllChats(prev => ({\n        ...prev,\n        [user.id]: formatted\n      }));\n    } catch (err) {\n      console.error(\"Failed to fetch messages:\", err);\n    }\n  };\n  useEffect(() => {\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\n  }, []);\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"lastSelectedUser\");\n    onLogout();\n  };\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Convert file to base64 string\n    const reader = new FileReader();\n    reader.onload = event => {\n      const base64 = event.target.result;\n      const type = file.type.startsWith(\"image/\") ? \"image\" : \"file\";\n      sendMessage(base64, type);\n    };\n    reader.readAsDataURL(file);\n    e.target.value = null; // reset input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(user),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), notifications[user.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[user.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg border-b pb-2\",\n            children: selectedUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: chatBackground,\n            onChange: e => setChatBackground(e.target.value),\n            className: \"w-10 h-8 rounded cursor-pointer\",\n            title: \"Change Chat Background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner mb-2 flex flex-col space-y-2\",\n          style: {\n            backgroundColor: chatBackground\n          },\n          children: [(allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"}`,\n            children: [c.type === \"text\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: c.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this), c.type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: c.message,\n              alt: \"sent\",\n              className: \"rounded max-w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 42\n            }, this), c.type === \"file\" && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: c.message,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              className: \"underline text-blue-700\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"Message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(message, \"text\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(message, \"text\"),\n            disabled: !isConnected || !selectedUser,\n            className: `px-4 py-2 rounded-full text-white ${isConnected ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"Ku6Hx/3KS2z/VjZYJcCwVOtkr2M=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","isConnected","setIsConnected","chatBackground","setChatBackground","messagesEndRef","current","scrollIntoView","behavior","init","state","off","onreconnected","onclose","invoke","id","res","fetch","data","json","filter","u","usersMap","Object","fromEntries","map","username","on","senderId","receiverId","messageText","messageType","otherUserId","msg","toString","type","senderUsername","prev","err","console","error","sendMessage","trim","handleUserClick","user","sessionStorage","setItem","JSON","stringify","msgs","formatted","m","text","lastUser","getItem","parse","handleLogoutClick","removeItem","handleFileChange","e","file","target","files","reader","FileReader","onload","event","base64","result","startsWith","readAsDataURL","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","title","style","backgroundColor","c","i","src","alt","href","rel","ref","placeholder","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [notifications, setNotifications] = useState({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [allChats, selectedUser]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        if (connection.state === \"Disconnected\" || connection.state === 0) {\r\n          await startConnection();\r\n        }\r\n\r\n        connection.off(\"ReceiveMessage\");\r\n        connection.onreconnected(() => setIsConnected(true));\r\n        connection.onclose(() => setIsConnected(false));\r\n        if (connection.state === \"Connected\" || connection.state === 1)\r\n          setIsConnected(true);\r\n\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter((u) => u.id !== currentUser.id));\r\n        const usersMap = Object.fromEntries(data.map(u => [u.id, u.username]));\r\n\r\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType) => {\r\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\r\n          const msg = {\r\n            senderId,\r\n            message: messageText?.toString() || \"\",\r\n            type: messageType || \"text\", // 'text' | 'image' | 'file'\r\n            senderUsername: usersMap[senderId] || \"Unknown\",\r\n          };\r\n\r\n          setAllChats(prev => ({\r\n            ...prev,\r\n            [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n          }));\r\n\r\n          if (!selectedUser || selectedUser.id !== senderId) {\r\n            setNotifications(prev => ({\r\n              ...prev,\r\n              [senderId]: (prev[senderId] || 0) + 1,\r\n            }));\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error(\"SignalR connection failed:\", err);\r\n      }\r\n    };\r\n    init();\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser]);\r\n\r\n  // Send a message (text/file/image)\r\n  const sendMessage = async (messageText, messageType = \"text\") => {\r\n    if ((!messageText || !messageText.trim()) && messageType === \"text\") return;\r\n    if (!selectedUser) return;\r\n    if (connection.state !== \"Connected\" && connection.state !== 1) return;\r\n\r\n    try {\r\n      await connection.invoke(\"SendMessage\", selectedUser.id, messageText, messageType);\r\n\r\n      const msg = {\r\n        senderId: currentUser.id,\r\n        message: messageText,\r\n        type: messageType,\r\n        senderUsername: currentUser.username,\r\n      };\r\n\r\n      setAllChats(prev => ({\r\n        ...prev,\r\n        [selectedUser.id]: [...(prev[selectedUser.id] || []), msg],\r\n      }));\r\n\r\n      if (messageType === \"text\") setMessage(\"\");\r\n    } catch (err) {\r\n      console.error(\"SendMessage failed:\", err);\r\n    }\r\n  };\r\n\r\n  const handleUserClick = async (user) => {\r\n    setSelectedUser(user);\r\n    setNotifications(prev => ({ ...prev, [user.id]: 0 }));\r\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\r\n      const msgs = await res.json();\r\n      const formatted = msgs.map(m => ({\r\n        senderId: m.senderId,\r\n        message: m.text,\r\n        type: m.type || \"text\",\r\n        senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username\r\n      }));\r\n      setAllChats(prev => ({ ...prev, [user.id]: formatted }));\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch messages:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\r\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\r\n  }, []);\r\n\r\n  const handleLogoutClick = () => {\r\n    sessionStorage.removeItem(\"currentUser\");\r\n    sessionStorage.removeItem(\"lastSelectedUser\");\r\n    onLogout();\r\n  };\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Convert file to base64 string\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const base64 = event.target.result;\r\n      const type = file.type.startsWith(\"image/\") ? \"image\" : \"file\";\r\n      sendMessage(base64, type);\r\n    };\r\n    reader.readAsDataURL(file);\r\n    e.target.value = null; // reset input\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n          <button\r\n            onClick={handleLogoutClick}\r\n            className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n        {users.map((user) => (\r\n          <div\r\n            key={user.id}\r\n            onClick={() => handleUserClick(user)}\r\n            className={`flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${\r\n              selectedUser?.id === user.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"\r\n            }`}\r\n          >\r\n            <span className=\"font-medium\">{user.username}</span>\r\n            {notifications[user.id] > 0 && (\r\n              <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">\r\n                {notifications[user.id]}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <h2 className=\"font-bold text-lg border-b pb-2\">{selectedUser.username}</h2>\r\n              <input\r\n                type=\"color\"\r\n                value={chatBackground}\r\n                onChange={(e) => setChatBackground(e.target.value)}\r\n                className=\"w-10 h-8 rounded cursor-pointer\"\r\n                title=\"Change Chat Background\"\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className=\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner mb-2 flex flex-col space-y-2\"\r\n              style={{ backgroundColor: chatBackground }}\r\n            >\r\n              {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={`max-w-[70%] p-2 rounded-lg shadow break-words ${\r\n                    c.senderId === currentUser.id\r\n                      ? \"self-end bg-blue-500 text-white\"\r\n                      : \"self-start bg-white text-gray-800\"\r\n                  }`}\r\n                >\r\n                  {c.type === \"text\" && <span>{c.message}</span>}\r\n                  {c.type === \"image\" && <img src={c.message} alt=\"sent\" className=\"rounded max-w-full\" />}\r\n                  {c.type === \"file\" && (\r\n                    <a href={c.message} target=\"_blank\" rel=\"noreferrer\" className=\"underline text-blue-700\">\r\n                      Download File\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Input */}\r\n            <div className=\"flex items-center space-x-2\">\r\n              <input\r\n                className=\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                placeholder=\"Message...\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage(message, \"text\")}\r\n              />\r\n              <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                📎\r\n                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} />\r\n              </label>\r\n              <button\r\n                onClick={() => sendMessage(message, \"text\")}\r\n                disabled={!isConnected || !selectedUser}\r\n                className={`px-4 py-2 rounded-full text-white ${\r\n                  isConnected ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"\r\n                }`}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">\r\n            Select a user to start chat\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}