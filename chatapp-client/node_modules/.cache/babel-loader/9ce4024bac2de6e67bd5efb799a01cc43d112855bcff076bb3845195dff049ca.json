{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // user object\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({}); // {receiverId: [{senderId, message}]}\n\n  useEffect(() => {\n    const init = async () => {\n      await startConnection();\n\n      // login current user\n      await connection.invoke(\"Login\", currentUser.id);\n\n      // fetch all users except current\n      const res = await fetch(\"http://localhost:5090/api/users\");\n      const data = await res.json();\n      setUsers(data.filter(u => u.id !== currentUser.id));\n\n      // listen for messages\n      connection.on(\"ReceiveMessage\", (senderId, receiverId, message) => {\n        const chatKey = senderId === currentUser.id ? receiverId : senderId;\n        setAllChats(prev => ({\n          ...prev,\n          [chatKey]: [...(prev[chatKey] || []), {\n            senderId,\n            message\n          }]\n        }));\n      });\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser]);\n  const handleSelectUser = user => {\n    setSelectedUser(user);\n  };\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser) return;\n    if (connection.state === 1) {\n      // Connected\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\n      setMessage(\"\");\n    } else {\n      console.warn(\"Connection not ready\");\n    }\n  };\n\n  // get chat with selected user\n  const chat = selectedUser ? allChats[selectedUser.id] || [] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-4\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 cursor-pointer rounded ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-gray-200\" : \"\"}`,\n        onClick: () => handleSelectUser(user),\n        children: user.username\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: selectedUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto border p-2 rounded mb-2 bg-white\",\n          children: chat.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-1 ${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.senderId === currentUser.id ? \"You\" : selectedUser.username, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), c.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border p-2 rounded\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-500\",\n        children: \"Select a user to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"+CBxhF3BrLJCVMEvbqa9MgaKmok=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","init","invoke","id","res","fetch","data","json","filter","u","on","senderId","receiverId","chatKey","prev","off","handleSelectUser","user","sendMessage","trim","state","console","warn","chat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","username","c","i","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["// src/components/ChatWindow.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null); // user object\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({}); // {receiverId: [{senderId, message}]}\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await startConnection();\r\n\r\n      // login current user\r\n      await connection.invoke(\"Login\", currentUser.id);\r\n\r\n      // fetch all users except current\r\n      const res = await fetch(\"http://localhost:5090/api/users\");\r\n      const data = await res.json();\r\n      setUsers(data.filter(u => u.id !== currentUser.id));\r\n\r\n      // listen for messages\r\n      connection.on(\"ReceiveMessage\", (senderId, receiverId, message) => {\r\n        const chatKey = senderId === currentUser.id ? receiverId : senderId;\r\n\r\n        setAllChats(prev => ({\r\n          ...prev,\r\n          [chatKey]: [...(prev[chatKey] || []), { senderId, message }]\r\n        }));\r\n      });\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser]);\r\n\r\n  const handleSelectUser = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim() || !selectedUser) return;\r\n\r\n    if (connection.state === 1) { // Connected\r\n      await connection.invoke(\"SendMessage\", selectedUser.id, message);\r\n      setMessage(\"\");\r\n    } else {\r\n      console.warn(\"Connection not ready\");\r\n    }\r\n  };\r\n\r\n  // get chat with selected user\r\n  const chat = selectedUser ? allChats[selectedUser.id] || [] : [];\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* User List */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-gray-50\">\r\n        <h2 className=\"font-bold mb-4\">Users</h2>\r\n        {users.map(user => (\r\n          <div\r\n            key={user.id}\r\n            className={`p-2 cursor-pointer rounded ${selectedUser?.id === user.id ? \"bg-gray-200\" : \"\"}`}\r\n            onClick={() => handleSelectUser(user)}\r\n          >\r\n            {user.username}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <h2 className=\"font-bold mb-2\">{selectedUser.username}</h2>\r\n            <div className=\"flex-1 overflow-y-auto border p-2 rounded mb-2 bg-white\">\r\n              {chat.map((c, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={`mb-1 ${c.senderId === currentUser.id ? \"text-right\" : \"text-left\"}`}\r\n                >\r\n                  <strong>{c.senderId === currentUser.id ? \"You\" : selectedUser.username}: </strong>\r\n                  {c.message}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <input\r\n                className=\"flex-1 border p-2 rounded\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n                onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n                placeholder=\"Type a message...\"\r\n              />\r\n              <button\r\n                className=\"ml-2 p-2 bg-blue-500 text-white rounded\"\r\n                onClick={sendMessage}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n            Select a user to chat\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}