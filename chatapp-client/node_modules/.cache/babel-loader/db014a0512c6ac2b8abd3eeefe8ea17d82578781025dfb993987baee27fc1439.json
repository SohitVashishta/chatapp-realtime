{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [allChats, selectedUser]);\n\n  // Initialize SignalR\n  useEffect(() => {\n    const init = async () => {\n      try {\n        if (connection.state === \"Disconnected\" || connection.state === 0) await startConnection();\n        setIsConnected(connection.state === \"Connected\" || connection.state === 1);\n        await connection.invoke(\"Login\", currentUser.id);\n\n        // Fetch users\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n        const usersMap = Object.fromEntries(data.map(u => [u.id, u.username]));\n\n        // Receive messages\n        connection.off(\"ReceiveMessage\");\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType) => {\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\n          const msg = {\n            senderId,\n            message: messageText,\n            type: messageType || \"text\",\n            senderUsername: usersMap[senderId] || \"Unknown\"\n          };\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n          if (!selectedUser || selectedUser.id !== senderId) {\n            setNotifications(prev => ({\n              ...prev,\n              [senderId]: (prev[senderId] || 0) + 1\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(\"SignalR init failed:\", err);\n      }\n    };\n    init();\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [currentUser, selectedUser]);\n\n  // Send message\n  const sendMessage = async (msg, type = \"text\") => {\n    if (!msg && type === \"text\") return;\n    if (!selectedUser) return;\n    if (connection.state !== \"Connected\" && connection.state !== 1) return;\n    await connection.invoke(\"SendMessage\", selectedUser.id, msg, type);\n    setAllChats(prev => ({\n      ...prev,\n      [selectedUser.id]: [...(prev[selectedUser.id] || []), {\n        senderId: currentUser.id,\n        message: msg,\n        type,\n        senderUsername: currentUser.username\n      }]\n    }));\n    if (type === \"text\") setMessage(\"\");\n  };\n\n  // Select user & load chat\n  const handleUserClick = async user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [user.id]: 0\n    }));\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\n    try {\n      const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\n      const msgs = await res.json();\n      const formatted = msgs.map(m => ({\n        senderId: m.senderId,\n        message: m.text,\n        type: m.type || \"text\",\n        senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username\n      }));\n      setAllChats(prev => ({\n        ...prev,\n        [user.id]: formatted\n      }));\n    } catch (err) {\n      console.error(\"Failed to fetch messages:\", err);\n    }\n  };\n\n  // Restore last selected user\n  useEffect(() => {\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\n  }, []);\n\n  // Upload file or image\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await fetch(\"http://localhost:5090/api/files/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      const type = file.type.startsWith(\"image/\") ? \"image\" : \"file\";\n      sendMessage(data.fileUrl, type);\n    } catch (err) {\n      console.error(\"File upload failed:\", err);\n    } finally {\n      e.target.value = null;\n    }\n  };\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"lastSelectedUser\");\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(u),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: u.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), notifications[u.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[u.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg border-b pb-2\",\n            children: selectedUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: chatBackground,\n            onChange: e => setChatBackground(e.target.value),\n            className: \"w-10 h-8 rounded cursor-pointer\",\n            title: \"Change Chat Background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\",\n          style: {\n            backgroundColor: chatBackground\n          },\n          children: [(allChats[selectedUser.id] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"}`,\n            children: [c.type === \"text\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: c.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 41\n            }, this), c.type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: c.message,\n              className: \"rounded max-w-full\",\n              alt: \"sent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 42\n            }, this), c.type === \"file\" && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: c.message,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              className: \"underline text-blue-700\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 41\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"Message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(message, \"text\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCF8\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange,\n              accept: \"image/*\",\n              capture: \"environment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(message, \"text\"),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"Ku6Hx/3KS2z/VjZYJcCwVOtkr2M=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","isConnected","setIsConnected","chatBackground","setChatBackground","messagesEndRef","current","scrollIntoView","behavior","init","state","invoke","id","res","fetch","data","json","filter","u","usersMap","Object","fromEntries","map","username","off","on","senderId","receiverId","messageText","messageType","otherUserId","msg","type","senderUsername","prev","err","console","error","sendMessage","handleUserClick","user","sessionStorage","setItem","JSON","stringify","msgs","formatted","m","text","lastUser","getItem","parse","handleFileChange","e","file","target","files","formData","FormData","append","method","body","startsWith","fileUrl","value","handleLogoutClick","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","title","style","backgroundColor","c","i","src","alt","href","rel","ref","placeholder","onKeyDown","key","accept","capture","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [notifications, setNotifications] = useState({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [allChats, selectedUser]);\r\n\r\n  // Initialize SignalR\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        if (connection.state === \"Disconnected\" || connection.state === 0) await startConnection();\r\n\r\n        setIsConnected(connection.state === \"Connected\" || connection.state === 1);\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        // Fetch users\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter(u => u.id !== currentUser.id));\r\n        const usersMap = Object.fromEntries(data.map(u => [u.id, u.username]));\r\n\r\n        // Receive messages\r\n        connection.off(\"ReceiveMessage\");\r\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType) => {\r\n          const otherUserId = senderId === currentUser.id ? receiverId : senderId;\r\n          const msg = {\r\n            senderId,\r\n            message: messageText,\r\n            type: messageType || \"text\",\r\n            senderUsername: usersMap[senderId] || \"Unknown\",\r\n          };\r\n\r\n          setAllChats(prev => ({\r\n            ...prev,\r\n            [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n          }));\r\n\r\n          if (!selectedUser || selectedUser.id !== senderId) {\r\n            setNotifications(prev => ({\r\n              ...prev,\r\n              [senderId]: (prev[senderId] || 0) + 1,\r\n            }));\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error(\"SignalR init failed:\", err);\r\n      }\r\n    };\r\n    init();\r\n\r\n    return () => {\r\n      connection.off(\"ReceiveMessage\");\r\n    };\r\n  }, [currentUser, selectedUser]);\r\n\r\n  // Send message\r\n  const sendMessage = async (msg, type = \"text\") => {\r\n    if (!msg && type === \"text\") return;\r\n    if (!selectedUser) return;\r\n    if (connection.state !== \"Connected\" && connection.state !== 1) return;\r\n\r\n    await connection.invoke(\"SendMessage\", selectedUser.id, msg, type);\r\n\r\n    setAllChats(prev => ({\r\n      ...prev,\r\n      [selectedUser.id]: [...(prev[selectedUser.id] || []), {\r\n        senderId: currentUser.id,\r\n        message: msg,\r\n        type,\r\n        senderUsername: currentUser.username\r\n      }],\r\n    }));\r\n\r\n    if (type === \"text\") setMessage(\"\");\r\n  };\r\n\r\n  // Select user & load chat\r\n  const handleUserClick = async (user) => {\r\n    setSelectedUser(user);\r\n    setNotifications(prev => ({ ...prev, [user.id]: 0 }));\r\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\r\n      const msgs = await res.json();\r\n      const formatted = msgs.map(m => ({\r\n        senderId: m.senderId,\r\n        message: m.text,\r\n        type: m.type || \"text\",\r\n        senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username\r\n      }));\r\n      setAllChats(prev => ({ ...prev, [user.id]: formatted }));\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch messages:\", err);\r\n    }\r\n  };\r\n\r\n  // Restore last selected user\r\n  useEffect(() => {\r\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\r\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\r\n  }, []);\r\n\r\n  // Upload file or image\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5090/api/files/upload\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n      const data = await res.json();\r\n      const type = file.type.startsWith(\"image/\") ? \"image\" : \"file\";\r\n      sendMessage(data.fileUrl, type);\r\n    } catch (err) {\r\n      console.error(\"File upload failed:\", err);\r\n    } finally {\r\n      e.target.value = null;\r\n    }\r\n  };\r\n\r\n  const handleLogoutClick = () => {\r\n    sessionStorage.removeItem(\"currentUser\");\r\n    sessionStorage.removeItem(\"lastSelectedUser\");\r\n    onLogout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n          <button\r\n            onClick={handleLogoutClick}\r\n            className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n          >Logout</button>\r\n        </div>\r\n        {users.map(u => (\r\n          <div\r\n            key={u.id}\r\n            onClick={() => handleUserClick(u)}\r\n            className={`flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${\r\n              selectedUser?.id === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"\r\n            }`}\r\n          >\r\n            <span className=\"font-medium\">{u.username}</span>\r\n            {notifications[u.id] > 0 && (\r\n              <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">\r\n                {notifications[u.id]}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <h2 className=\"font-bold text-lg border-b pb-2\">{selectedUser.username}</h2>\r\n              <input type=\"color\" value={chatBackground} onChange={e => setChatBackground(e.target.value)}\r\n                className=\"w-10 h-8 rounded cursor-pointer\" title=\"Change Chat Background\" />\r\n            </div>\r\n\r\n            <div className=\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\"\r\n              style={{ backgroundColor: chatBackground }}>\r\n              {(allChats[selectedUser.id] || []).map((c, i) => (\r\n                <div key={i}\r\n                  className={`max-w-[70%] p-2 rounded-lg shadow break-words ${\r\n                    c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"\r\n                  }`}\r\n                >\r\n                  {c.type === \"text\" && <span>{c.message}</span>}\r\n                  {c.type === \"image\" && <img src={c.message} className=\"rounded max-w-full\" alt=\"sent\" />}\r\n                  {c.type === \"file\" && <a href={c.message} target=\"_blank\" rel=\"noreferrer\" className=\"underline text-blue-700\">Download File</a>}\r\n                </div>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Input */}\r\n            <div className=\"flex items-center space-x-2 mt-2\">\r\n              <input\r\n                className=\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                placeholder=\"Message...\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n                onKeyDown={e => e.key === \"Enter\" && sendMessage(message, \"text\")}\r\n              />\r\n\r\n              {/* Attach File */}\r\n              <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                📎\r\n                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} />\r\n              </label>\r\n\r\n              {/* Take Picture */}\r\n              <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">\r\n                📸\r\n                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} accept=\"image/*\" capture=\"environment\"/>\r\n              </label>\r\n\r\n              <button onClick={() => sendMessage(message, \"text\")}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\">Send</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">Select a user to start chat</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,UAAU,EAAEC,eAAe,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5E,MAAMC,UAAU,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,SAAS,CAAC;EAE/D,MAAM0B,cAAc,GAAGzB,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAF,SAAS,CAAC,MAAM;IACd,IAAI2B,cAAc,CAACC,OAAO,EAAE;MAC1BD,cAAc,CAACC,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC/D;EACF,CAAC,EAAE,CAACX,QAAQ,EAAEJ,YAAY,CAAC,CAAC;;EAE5B;EACAf,SAAS,CAAC,MAAM;IACd,MAAM+B,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,IAAI5B,UAAU,CAAC6B,KAAK,KAAK,cAAc,IAAI7B,UAAU,CAAC6B,KAAK,KAAK,CAAC,EAAE,MAAM5B,eAAe,CAAC,CAAC;QAE1FoB,cAAc,CAACrB,UAAU,CAAC6B,KAAK,KAAK,WAAW,IAAI7B,UAAU,CAAC6B,KAAK,KAAK,CAAC,CAAC;QAC1E,MAAM7B,UAAU,CAAC8B,MAAM,CAAC,OAAO,EAAEvB,WAAW,CAACwB,EAAE,CAAC;;QAEhD;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BxB,QAAQ,CAACuB,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKxB,WAAW,CAACwB,EAAE,CAAC,CAAC;QACnD,MAAMO,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAACN,IAAI,CAACO,GAAG,CAACJ,CAAC,IAAI,CAACA,CAAC,CAACN,EAAE,EAAEM,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;;QAEtE;QACA1C,UAAU,CAAC2C,GAAG,CAAC,gBAAgB,CAAC;QAChC3C,UAAU,CAAC4C,EAAE,CAAC,gBAAgB,EAAE,CAACC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW,KAAK;UAClF,MAAMC,WAAW,GAAGJ,QAAQ,KAAKtC,WAAW,CAACwB,EAAE,GAAGe,UAAU,GAAGD,QAAQ;UACvE,MAAMK,GAAG,GAAG;YACVL,QAAQ;YACR/B,OAAO,EAAEiC,WAAW;YACpBI,IAAI,EAAEH,WAAW,IAAI,MAAM;YAC3BI,cAAc,EAAEd,QAAQ,CAACO,QAAQ,CAAC,IAAI;UACxC,CAAC;UAED5B,WAAW,CAACoC,IAAI,KAAK;YACnB,GAAGA,IAAI;YACP,CAACJ,WAAW,GAAG,CAAC,IAAII,IAAI,CAACJ,WAAW,CAAC,IAAI,EAAE,CAAC,EAAEC,GAAG;UACnD,CAAC,CAAC,CAAC;UAEH,IAAI,CAACtC,YAAY,IAAIA,YAAY,CAACmB,EAAE,KAAKc,QAAQ,EAAE;YACjD1B,gBAAgB,CAACkC,IAAI,KAAK;cACxB,GAAGA,IAAI;cACP,CAACR,QAAQ,GAAG,CAACQ,IAAI,CAACR,QAAQ,CAAC,IAAI,CAAC,IAAI;YACtC,CAAC,CAAC,CAAC;UACL;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC5C;IACF,CAAC;IACD1B,IAAI,CAAC,CAAC;IAEN,OAAO,MAAM;MACX5B,UAAU,CAAC2C,GAAG,CAAC,gBAAgB,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAACpC,WAAW,EAAEK,YAAY,CAAC,CAAC;;EAE/B;EACA,MAAM6C,WAAW,GAAG,MAAAA,CAAOP,GAAG,EAAEC,IAAI,GAAG,MAAM,KAAK;IAChD,IAAI,CAACD,GAAG,IAAIC,IAAI,KAAK,MAAM,EAAE;IAC7B,IAAI,CAACvC,YAAY,EAAE;IACnB,IAAIZ,UAAU,CAAC6B,KAAK,KAAK,WAAW,IAAI7B,UAAU,CAAC6B,KAAK,KAAK,CAAC,EAAE;IAEhE,MAAM7B,UAAU,CAAC8B,MAAM,CAAC,aAAa,EAAElB,YAAY,CAACmB,EAAE,EAAEmB,GAAG,EAAEC,IAAI,CAAC;IAElElC,WAAW,CAACoC,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACzC,YAAY,CAACmB,EAAE,GAAG,CAAC,IAAIsB,IAAI,CAACzC,YAAY,CAACmB,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE;QACpDc,QAAQ,EAAEtC,WAAW,CAACwB,EAAE;QACxBjB,OAAO,EAAEoC,GAAG;QACZC,IAAI;QACJC,cAAc,EAAE7C,WAAW,CAACmC;MAC9B,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,IAAIS,IAAI,KAAK,MAAM,EAAEpC,UAAU,CAAC,EAAE,CAAC;EACrC,CAAC;;EAED;EACA,MAAM2C,eAAe,GAAG,MAAOC,IAAI,IAAK;IACtC9C,eAAe,CAAC8C,IAAI,CAAC;IACrBxC,gBAAgB,CAACkC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACM,IAAI,CAAC5B,EAAE,GAAG;IAAE,CAAC,CAAC,CAAC;IACrD6B,cAAc,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAEhE,IAAI;MACF,MAAM3B,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C1B,WAAW,CAACwB,EAAE,IAAI4B,IAAI,CAAC5B,EAAE,EAAE,CAAC;MAChG,MAAMiC,IAAI,GAAG,MAAMhC,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,MAAM8B,SAAS,GAAGD,IAAI,CAACvB,GAAG,CAACyB,CAAC,KAAK;QAC/BrB,QAAQ,EAAEqB,CAAC,CAACrB,QAAQ;QACpB/B,OAAO,EAAEoD,CAAC,CAACC,IAAI;QACfhB,IAAI,EAAEe,CAAC,CAACf,IAAI,IAAI,MAAM;QACtBC,cAAc,EAAEc,CAAC,CAACrB,QAAQ,KAAKtC,WAAW,CAACwB,EAAE,GAAGxB,WAAW,CAACmC,QAAQ,GAAGiB,IAAI,CAACjB;MAC9E,CAAC,CAAC,CAAC;MACHzB,WAAW,CAACoC,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACM,IAAI,CAAC5B,EAAE,GAAGkC;MAAU,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOX,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;;EAED;EACAzD,SAAS,CAAC,MAAM;IACd,MAAMuE,QAAQ,GAAGR,cAAc,CAACS,OAAO,CAAC,kBAAkB,CAAC;IAC3D,IAAID,QAAQ,EAAEV,eAAe,CAACI,IAAI,CAACQ,KAAK,CAACF,QAAQ,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMzC,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QAChE8C,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MACF,MAAM1C,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,MAAMgB,IAAI,GAAGsB,IAAI,CAACtB,IAAI,CAAC8B,UAAU,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,MAAM;MAC9DxB,WAAW,CAACvB,IAAI,CAACgD,OAAO,EAAE/B,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAC3C,CAAC,SAAS;MACRkB,CAAC,CAACE,MAAM,CAACS,KAAK,GAAG,IAAI;IACvB;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BxB,cAAc,CAACyB,UAAU,CAAC,aAAa,CAAC;IACxCzB,cAAc,CAACyB,UAAU,CAAC,kBAAkB,CAAC;IAC7C7E,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,oBACEL,OAAA;IAAKmF,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBAExCpF,OAAA;MAAKmF,SAAS,EAAC,oDAAoD;MAAAC,QAAA,gBACjEpF,OAAA;QAAKmF,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDpF,OAAA;UAAImF,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEhF,WAAW,CAACmC;QAAQ;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DxF,OAAA;UACEyF,OAAO,EAAER,iBAAkB;UAC3BE,SAAS,EAAC,kEAAkE;UAAAC,QAAA,EAC7E;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,EACLjF,KAAK,CAAC+B,GAAG,CAACJ,CAAC,iBACVlC,OAAA;QAEEyF,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAACrB,CAAC,CAAE;QAClCiD,SAAS,EAAE,qEACT,CAAA1E,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEmB,EAAE,MAAKM,CAAC,CAACN,EAAE,GAAG,aAAa,GAAG,mBAAmB,EAC9D;QAAAwD,QAAA,gBAEHpF,OAAA;UAAMmF,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAElD,CAAC,CAACK;QAAQ;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAChDzE,aAAa,CAACmB,CAAC,CAACN,EAAE,CAAC,GAAG,CAAC,iBACtB5B,OAAA;UAAMmF,SAAS,EAAC,wDAAwD;UAAAC,QAAA,EACrErE,aAAa,CAACmB,CAAC,CAACN,EAAE;QAAC;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CACP;MAAA,GAXItD,CAAC,CAACN,EAAE;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYN,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNxF,OAAA;MAAKmF,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EACtC3E,YAAY,gBACXT,OAAA,CAAAE,SAAA;QAAAkF,QAAA,gBACEpF,OAAA;UAAKmF,SAAS,EAAC,wCAAwC;UAAAC,QAAA,gBACrDpF,OAAA;YAAImF,SAAS,EAAC,iCAAiC;YAAAC,QAAA,EAAE3E,YAAY,CAAC8B;UAAQ;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5ExF,OAAA;YAAOgD,IAAI,EAAC,OAAO;YAACgC,KAAK,EAAE7D,cAAe;YAACuE,QAAQ,EAAErB,CAAC,IAAIjD,iBAAiB,CAACiD,CAAC,CAACE,MAAM,CAACS,KAAK,CAAE;YAC1FG,SAAS,EAAC,iCAAiC;YAACQ,KAAK,EAAC;UAAwB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,eAENxF,OAAA;UAAKmF,SAAS,EAAC,4EAA4E;UACzFS,KAAK,EAAE;YAAEC,eAAe,EAAE1E;UAAe,CAAE;UAAAiE,QAAA,GAC1C,CAACvE,QAAQ,CAACJ,YAAY,CAACmB,EAAE,CAAC,IAAI,EAAE,EAAEU,GAAG,CAAC,CAACwD,CAAC,EAAEC,CAAC,kBAC1C/F,OAAA;YACEmF,SAAS,EAAE,iDACTW,CAAC,CAACpD,QAAQ,KAAKtC,WAAW,CAACwB,EAAE,GAAG,iCAAiC,GAAG,mCAAmC,EACtG;YAAAwD,QAAA,GAEFU,CAAC,CAAC9C,IAAI,KAAK,MAAM,iBAAIhD,OAAA;cAAAoF,QAAA,EAAOU,CAAC,CAACnF;YAAO;cAAA0E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC7CM,CAAC,CAAC9C,IAAI,KAAK,OAAO,iBAAIhD,OAAA;cAAKgG,GAAG,EAAEF,CAAC,CAACnF,OAAQ;cAACwE,SAAS,EAAC,oBAAoB;cAACc,GAAG,EAAC;YAAM;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACvFM,CAAC,CAAC9C,IAAI,KAAK,MAAM,iBAAIhD,OAAA;cAAGkG,IAAI,EAAEJ,CAAC,CAACnF,OAAQ;cAAC4D,MAAM,EAAC,QAAQ;cAAC4B,GAAG,EAAC,YAAY;cAAChB,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA,GAPxHO,CAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQN,CACN,CAAC,eACFxF,OAAA;YAAKoG,GAAG,EAAE/E;UAAe;YAAAgE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eAGNxF,OAAA;UAAKmF,SAAS,EAAC,kCAAkC;UAAAC,QAAA,gBAC/CpF,OAAA;YACEmF,SAAS,EAAC,yFAAyF;YACnGkB,WAAW,EAAC,YAAY;YACxBrB,KAAK,EAAErE,OAAQ;YACf+E,QAAQ,EAAErB,CAAC,IAAIzD,UAAU,CAACyD,CAAC,CAACE,MAAM,CAACS,KAAK,CAAE;YAC1CsB,SAAS,EAAEjC,CAAC,IAAIA,CAAC,CAACkC,GAAG,KAAK,OAAO,IAAIjD,WAAW,CAAC3C,OAAO,EAAE,MAAM;UAAE;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC,eAGFxF,OAAA;YAAOmF,SAAS,EAAC,+DAA+D;YAAAC,QAAA,GAAC,cAE/E,eAAApF,OAAA;cAAOgD,IAAI,EAAC,MAAM;cAACmC,SAAS,EAAC,QAAQ;cAACO,QAAQ,EAAEtB;YAAiB;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eAGRxF,OAAA;YAAOmF,SAAS,EAAC,+DAA+D;YAAAC,QAAA,GAAC,cAE/E,eAAApF,OAAA;cAAOgD,IAAI,EAAC,MAAM;cAACmC,SAAS,EAAC,QAAQ;cAACO,QAAQ,EAAEtB,gBAAiB;cAACoC,MAAM,EAAC,SAAS;cAACC,OAAO,EAAC;YAAa;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrG,CAAC,eAERxF,OAAA;YAAQyF,OAAO,EAAEA,CAAA,KAAMnC,WAAW,CAAC3C,OAAO,EAAE,MAAM,CAAE;YAClDwE,SAAS,EAAC,iEAAiE;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC;MAAA,eACN,CAAC,gBAEHxF,OAAA;QAAKmF,SAAS,EAAC,+DAA+D;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAChH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClF,EAAA,CAvOIH,UAAU;AAAAuG,EAAA,GAAVvG,UAAU;AAyOhB,eAAeA,UAAU;AAAC,IAAAuG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}