{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\nconst connection = new signalR.HubConnectionBuilder().withUrl(\"http://localhost:5090/chathub\").withAutomaticReconnect().build();\nasync function startConnection() {\n  if (connection.state === signalR.HubConnectionState.Disconnected) {\n    try {\n      await connection.start();\n      console.log(\"SignalR Connected.\");\n    } catch (err) {\n      console.error(\"Connection failed: \", err);\n      setTimeout(startConnection, 2000);\n    }\n  }\n}\nexport { connection, startConnection };","map":{"version":3,"names":["signalR","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","startConnection","state","HubConnectionState","Disconnected","start","console","log","err","error","setTimeout"],"sources":["D:/Project/ChatApplication/chatapp-client/src/services/signalRConnection.js"],"sourcesContent":["import * as signalR from '@microsoft/signalr';\r\n\r\nconst connection = new signalR.HubConnectionBuilder()\r\n    .withUrl(\"http://localhost:5090/chathub\")\r\n    .withAutomaticReconnect()\r\n    .build();\r\n\r\nasync function startConnection() {\r\n    if (connection.state === signalR.HubConnectionState.Disconnected) {\r\n        try {\r\n            await connection.start();\r\n            console.log(\"SignalR Connected.\");\r\n        } catch (err) {\r\n            console.error(\"Connection failed: \", err);\r\n            setTimeout(startConnection, 2000);\r\n        }\r\n    }\r\n}\r\n\r\nexport { connection, startConnection };\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAE7C,MAAMC,UAAU,GAAG,IAAID,OAAO,CAACE,oBAAoB,CAAC,CAAC,CAChDC,OAAO,CAAC,+BAA+B,CAAC,CACxCC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;AAEZ,eAAeC,eAAeA,CAAA,EAAG;EAC7B,IAAIL,UAAU,CAACM,KAAK,KAAKP,OAAO,CAACQ,kBAAkB,CAACC,YAAY,EAAE;IAC9D,IAAI;MACA,MAAMR,UAAU,CAACS,KAAK,CAAC,CAAC;MACxBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVF,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;MACzCE,UAAU,CAACT,eAAe,EAAE,IAAI,CAAC;IACrC;EACJ;AACJ;AAEA,SAASL,UAAU,EAAEK,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}