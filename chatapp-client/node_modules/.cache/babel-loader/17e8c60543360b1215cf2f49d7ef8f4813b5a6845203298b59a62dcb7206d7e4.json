{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (messagesEndRef.current) messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [allChats, selectedUser]);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        if (connection.state === \"Disconnected\" || connection.state === 0) await startConnection();\n        connection.off(\"ReceiveMessage\");\n        await connection.invoke(\"Login\", currentUser.id);\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n        const usersMap = Object.fromEntries(data.map(u => [String(u.id), u.username]));\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName) => {\n          const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\n          const msg = {\n            senderId,\n            message: messageText,\n            type: messageType || \"text\",\n            fileName,\n            senderUsername: usersMap[String(senderId)] || \"Unknown\"\n          };\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n          if (!selectedUser || String(selectedUser.id) !== otherUserId) {\n            setNotifications(prev => ({\n              ...prev,\n              [otherUserId]: (prev[otherUserId] || 0) + 1\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    init();\n    return () => connection.off(\"ReceiveMessage\");\n  }, [currentUser]);\n  const sendMessage = async (msg, type = \"text\", fileName = null) => {\n    if (!msg && type === \"text\" || !selectedUser) return;\n    if (type === \"text\") setMessage(\"\");\n    const userIdKey = String(selectedUser.id);\n\n    // Only add to sender's chat immediately if text\n    if (type === \"text\") {\n      const newMsg = {\n        senderId: currentUser.id,\n        message: msg,\n        type,\n        senderUsername: currentUser.username\n      };\n      setAllChats(prev => ({\n        ...prev,\n        [userIdKey]: [...(prev[userIdKey] || []), newMsg]\n      }));\n    }\n    try {\n      await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const fetchMessages = async user => {\n    try {\n      const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\n      const msgs = await res.json();\n      const formatted = msgs.map(m => ({\n        senderId: m.senderId,\n        message: m.type === \"text\" ? m.text : m.fileBase64,\n        type: m.type || \"text\",\n        fileName: m.fileName,\n        senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username\n      }));\n      setAllChats(prev => ({\n        ...prev,\n        [String(user.id)]: formatted\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleUserClick = async user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [String(user.id)]: 0\n    }));\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\n    await fetchMessages(user);\n  };\n  useEffect(() => {\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\n  }, []);\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file || !selectedUser) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"senderId\", currentUser.id);\n    formData.append(\"receiverId\", selectedUser.id);\n    try {\n      // Save to backend (DB)\n      const res = await fetch(\"http://localhost:5090/api/files/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n\n      // Send the file via SignalR\n      await sendMessage(data.fileUrl, data.type, file.name);\n    } catch (err) {\n      console.error(err);\n    }\n    e.target.value = null;\n  };\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"lastSelectedUser\");\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(u),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: u.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), notifications[String(u.id)] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[String(u.id)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg border-b pb-2\",\n            children: selectedUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: chatBackground,\n            onChange: e => setChatBackground(e.target.value),\n            className: \"w-10 h-8 rounded cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\",\n          style: {\n            backgroundColor: chatBackground\n          },\n          children: [(allChats[String(selectedUser.id)] || []).map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"}`,\n            children: [c.type === \"text\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: c.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 41\n            }, this), c.type === \"image\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-[250px] h-[200px] overflow-hidden rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: c.message,\n                alt: \"sent\",\n                className: \"object-cover w-full h-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 3\n            }, this), c.type === \"file\" && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: c.message,\n              download: c.fileName,\n              className: \"underline text-blue-700\",\n              children: c.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"Message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(message, \"text\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCF8\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange,\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(message, \"text\"),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"sHy7gC8uTIgZ4ccUrONdCUzuna4=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","chatBackground","setChatBackground","messagesEndRef","current","scrollIntoView","behavior","init","state","off","invoke","id","res","fetch","data","json","filter","u","usersMap","Object","fromEntries","map","String","username","on","senderId","receiverId","messageText","messageType","fileName","otherUserId","msg","type","senderUsername","prev","err","console","error","sendMessage","userIdKey","newMsg","fetchMessages","user","msgs","formatted","m","text","fileBase64","handleUserClick","sessionStorage","setItem","JSON","stringify","lastUser","getItem","parse","handleFileChange","e","file","target","files","formData","FormData","append","method","body","fileUrl","name","value","handleLogoutClick","removeItem","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onChange","style","backgroundColor","c","i","src","alt","href","download","ref","placeholder","onKeyDown","key","accept","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allChats, setAllChats] = useState({});\r\n  const [notifications, setNotifications] = useState({});\r\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (messagesEndRef.current)\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [allChats, selectedUser]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        if (connection.state === \"Disconnected\" || connection.state === 0)\r\n          await startConnection();\r\n\r\n        connection.off(\"ReceiveMessage\");\r\n        await connection.invoke(\"Login\", currentUser.id);\r\n\r\n        const res = await fetch(\"http://localhost:5090/api/users\");\r\n        const data = await res.json();\r\n        setUsers(data.filter(u => u.id !== currentUser.id));\r\n        const usersMap = Object.fromEntries(data.map(u => [String(u.id), u.username]));\r\n\r\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName) => {\r\n          const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\r\n          const msg = {\r\n            senderId,\r\n            message: messageText,\r\n            type: messageType || \"text\",\r\n            fileName,\r\n            senderUsername: usersMap[String(senderId)] || \"Unknown\",\r\n          };\r\n          setAllChats(prev => ({\r\n            ...prev,\r\n            [otherUserId]: [...(prev[otherUserId] || []), msg],\r\n          }));\r\n          if (!selectedUser || String(selectedUser.id) !== otherUserId) {\r\n            setNotifications(prev => ({ ...prev, [otherUserId]: (prev[otherUserId] || 0) + 1 }));\r\n          }\r\n        });\r\n      } catch (err) { console.error(err); }\r\n    };\r\n    init();\r\n    return () => connection.off(\"ReceiveMessage\");\r\n  }, [currentUser]);\r\n\r\n  const sendMessage = async (msg, type = \"text\", fileName = null) => {\r\n    if ((!msg && type === \"text\") || !selectedUser) return;\r\n    if (type === \"text\") setMessage(\"\");\r\n\r\n    const userIdKey = String(selectedUser.id);\r\n\r\n    // Only add to sender's chat immediately if text\r\n    if (type === \"text\") {\r\n      const newMsg = { senderId: currentUser.id, message: msg, type, senderUsername: currentUser.username };\r\n      setAllChats(prev => ({ ...prev, [userIdKey]: [...(prev[userIdKey] || []), newMsg] }));\r\n    }\r\n\r\n    try { await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName); }\r\n    catch (err) { console.error(err); }\r\n  };\r\n\r\n  const fetchMessages = async (user) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\r\n      const msgs = await res.json();\r\n      const formatted = msgs.map(m => ({\r\n        senderId: m.senderId,\r\n        message: m.type === \"text\" ? m.text : m.fileBase64,\r\n        type: m.type || \"text\",\r\n        fileName: m.fileName,\r\n        senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username\r\n      }));\r\n      setAllChats(prev => ({ ...prev, [String(user.id)]: formatted }));\r\n    } catch (err) { console.error(err); }\r\n  };\r\n\r\n  const handleUserClick = async (user) => {\r\n    setSelectedUser(user);\r\n    setNotifications(prev => ({ ...prev, [String(user.id)]: 0 }));\r\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\r\n    await fetchMessages(user);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\r\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\r\n  }, []);\r\n\r\n const handleFileChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  if (!file || !selectedUser) return;\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"senderId\", currentUser.id);\r\n  formData.append(\"receiverId\", selectedUser.id);\r\n\r\n  try {\r\n    // Save to backend (DB)\r\n    const res = await fetch(\"http://localhost:5090/api/files/upload\", { method: \"POST\", body: formData });\r\n    const data = await res.json();\r\n\r\n    // Send the file via SignalR\r\n    await sendMessage(data.fileUrl, data.type, file.name);\r\n\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n\r\n  e.target.value = null;\r\n};\r\n\r\n  const handleLogoutClick = () => {\r\n    sessionStorage.removeItem(\"currentUser\");\r\n    sessionStorage.removeItem(\"lastSelectedUser\");\r\n    onLogout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n          <button onClick={handleLogoutClick} className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\">Logout</button>\r\n        </div>\r\n        {users.map(u => (\r\n          <div key={u.id} onClick={() => handleUserClick(u)}\r\n               className={`flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${selectedUser?.id === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`}>\r\n            <span className=\"font-medium\">{u.username}</span>\r\n            {notifications[String(u.id)] > 0 && (\r\n              <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">{notifications[String(u.id)]}</span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"flex-1 flex flex-col p-4\">\r\n        {selectedUser ? (\r\n          <>\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <h2 className=\"font-bold text-lg border-b pb-2\">{selectedUser.username}</h2>\r\n              <input type=\"color\" value={chatBackground} onChange={e => setChatBackground(e.target.value)} className=\"w-10 h-8 rounded cursor-pointer\"/>\r\n            </div>\r\n\r\n            <div className=\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\" style={{ backgroundColor: chatBackground }}>\r\n              {(allChats[String(selectedUser.id)] || []).map((c, i) => (\r\n                <div key={i} className={`max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"}`}>\r\n                  {c.type === \"text\" && <span>{c.message}</span>}\r\n                  {c.type === \"image\" && (\r\n  <div className=\"w-[250px] h-[200px] overflow-hidden rounded-lg\">\r\n    <img src={c.message} alt=\"sent\" className=\"object-cover w-full h-full\" />\r\n  </div>\r\n)}\r\n                  {c.type === \"file\" && (\r\n                    <a href={c.message} download={c.fileName} className=\"underline text-blue-700\">{c.fileName}</a>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2 mt-2\">\r\n              <input className=\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                     placeholder=\"Message...\" value={message} onChange={e => setMessage(e.target.value)}\r\n                     onKeyDown={e => e.key === \"Enter\" && sendMessage(message, \"text\")}/>\r\n              <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">📎\r\n                <input type=\"file\" className=\"hidden\" onChange={handleFileChange}/>\r\n              </label>\r\n              <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">📸\r\n                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} accept=\"image/*\"/>\r\n              </label>\r\n              <button onClick={() => sendMessage(message, \"text\")} className=\"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\">Send</button>\r\n            </div>\r\n          </>\r\n        ) : <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">Select a user to start chat</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}