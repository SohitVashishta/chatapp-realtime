{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ChatApplication\\\\chatapp-client\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connection, startConnection } from \"../services/signalRConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [allChats, setAllChats] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom on new messages\n  useEffect(() => {\n    if (messagesEndRef.current) messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [allChats, selectedUser]);\n\n  // Initialize SignalR\n  useEffect(() => {\n    const init = async () => {\n      try {\n        if (connection.state !== \"Connected\") await startConnection();\n        if (connection.state === \"Connected\") await connection.invoke(\"Login\", currentUser.id);else {\n          setTimeout(init, 1000);\n          return;\n        }\n        connection.off(\"ReceiveMessage\");\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName, fileBase64) => {\n          const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\n          const msg = {\n            senderId,\n            type: messageType || \"text\",\n            fileName,\n            senderUsername: senderId === currentUser.id ? currentUser.username : \"Other\",\n            message: messageType === \"text\" ? messageText : fileBase64 // use actual base64 from backend\n          };\n\n          // Update chat messages\n          setAllChats(prev => ({\n            ...prev,\n            [otherUserId]: [...(prev[otherUserId] || []), msg]\n          }));\n\n          // Add notification if user not selected\n          if (!selectedUser || String(selectedUser.id) !== otherUserId) {\n            setNotifications(prev => ({\n              ...prev,\n              [otherUserId]: (prev[otherUserId] || 0) + 1\n            }));\n          }\n        });\n        const res = await fetch(\"http://localhost:5090/api/users\");\n        const data = await res.json();\n        setUsers(data.filter(u => u.id !== currentUser.id));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    init();\n    return () => connection.off(\"ReceiveMessage\");\n  }, [currentUser]);\n  const sendMessage = async (msg, type = \"text\", fileName = null) => {\n    if (!msg && type === \"text\" || !selectedUser) return;\n    if (type === \"text\") setMessage(\"\");\n    await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName);\n  };\n  const fetchMessages = async user => {\n    const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\n    const msgs = await res.json();\n    console.log(msgs);\n    // Format messages correctly\n    const formatted = msgs.map(m => ({\n      senderId: m.senderId,\n      type: m.type || \"text\",\n      fileName: m.fileName,\n      senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username,\n      message: m.type === \"text\" ? m.text : m.fileBase64 || \"\" // base64 for image/file\n    }));\n    console.log(formatted);\n\n    // Save in allChats for selected user\n    setAllChats(prev => ({\n      ...prev,\n      [String(user.id)]: formatted\n    }));\n  };\n  const handleUserClick = async user => {\n    setSelectedUser(user);\n    setNotifications(prev => ({\n      ...prev,\n      [String(user.id)]: 0\n    }));\n    sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\n    await fetchMessages(user);\n  };\n\n  // Restore last selected user\n  useEffect(() => {\n    const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\n    if (lastUser) handleUserClick(JSON.parse(lastUser));\n  }, []);\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (!file || !selectedUser) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"senderId\", currentUser.id);\n    formData.append(\"receiverId\", selectedUser.id);\n    const res = await fetch(\"http://localhost:5090/api/files/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    console.log(data);\n    //await sendMessage(data.fileBase64, data.type, file.name);\n    const sendMessage = async (message, type, fileName) => {\n      if (!selectedUser) return;\n      await connection.invoke(\"SendMessage\", selectedUser.id,\n      // receiverId\n      message, type, fileName || \"\");\n    };\n    e.target.value = null;\n  };\n  useEffect(() => {\n    if (!connection) return;\n    connection.on(\"ReceiveMessage\", (senderId, receiverId, message, type, fileName) => {\n      const msg = {\n        senderId,\n        receiverId,\n        content: message,\n        type,\n        fileName,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      connection.off(\"ReceiveMessage\");\n    };\n  }, [connection]);\n  const handleLogoutClick = () => {\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"lastSelectedUser\");\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-lg\",\n          children: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogoutClick,\n          className: \"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(u),\n        className: `flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: u.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), notifications[String(u.id)] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\",\n          children: notifications[String(u.id)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg border-b pb-2\",\n            children: selectedUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: chatBackground,\n            onChange: e => setChatBackground(e.target.value),\n            className: \"w-10 h-8 rounded cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\",\n          style: {\n            backgroundColor: chatBackground\n          },\n          children: [(allChats[String(selectedUser.id)] || []).map((c, i) => {\n            let content;\n            if (c.type === \"text\") {\n              content = /*#__PURE__*/_jsxDEV(\"span\", {\n                children: c.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 47\n              }, this);\n            } else if (c.type === \"image\" && c.message) {\n              content = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-[250px] h-[200px] overflow-hidden rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: c.message,\n                  alt: \"sent\",\n                  className: \"object-cover w-full h-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this);\n            } else if (c.type === \"file\" && c.message) {\n              content = /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `data:application/octet-stream;base64,${c.message}`,\n                download: c.fileName,\n                className: \"underline text-blue-700\",\n                children: c.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"}`,\n              children: content\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"Message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage(message, \"text\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\",\n            children: [\"\\uD83D\\uDCF8\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              onChange: handleFileChange,\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(message, \"text\"),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400 text-lg\",\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"g8vAVCduLKeyIqx209K+gcrqXxc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","connection","startConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","currentUser","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","message","setMessage","allChats","setAllChats","notifications","setNotifications","chatBackground","setChatBackground","messagesEndRef","current","scrollIntoView","behavior","init","state","invoke","id","setTimeout","off","on","senderId","receiverId","messageText","messageType","fileName","fileBase64","otherUserId","String","msg","type","senderUsername","username","prev","res","fetch","data","json","filter","u","err","console","error","sendMessage","fetchMessages","user","msgs","log","formatted","map","m","text","handleUserClick","sessionStorage","setItem","JSON","stringify","lastUser","getItem","parse","handleFileChange","e","file","target","files","formData","FormData","append","method","body","value","content","timestamp","Date","setMessages","handleLogoutClick","removeItem","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onChange","style","backgroundColor","c","i","src","alt","href","download","ref","placeholder","onKeyDown","key","accept","_c","$RefreshReg$"],"sources":["D:/Project/ChatApplication/chatapp-client/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connection, startConnection } from \"../services/signalRConnection\";\r\n\r\nconst ChatWindow = ({ currentUser, onLogout }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [allChats, setAllChats] = useState({});\r\n    const [notifications, setNotifications] = useState({});\r\n    const [chatBackground, setChatBackground] = useState(\"#f0f0f0\");\r\n    const messagesEndRef = useRef(null);\r\n\r\n    // Scroll to bottom on new messages\r\n    useEffect(() => {\r\n        if (messagesEndRef.current)\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [allChats, selectedUser]);\r\n\r\n    // Initialize SignalR\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                if (connection.state !== \"Connected\") await startConnection();\r\n                if (connection.state === \"Connected\") await connection.invoke(\"Login\", currentUser.id);\r\n                else { setTimeout(init, 1000); return; }\r\n\r\n                connection.off(\"ReceiveMessage\");\r\n                connection.on(\"ReceiveMessage\", (senderId, receiverId, messageText, messageType, fileName, fileBase64) => {\r\n                    const otherUserId = String(senderId === currentUser.id ? receiverId : senderId);\r\n                    const msg = {\r\n                        senderId,\r\n                        type: messageType || \"text\",\r\n                        fileName,\r\n                        senderUsername: senderId === currentUser.id ? currentUser.username : \"Other\",\r\n                        message: messageType === \"text\" ? messageText : fileBase64 // use actual base64 from backend\r\n                    };\r\n\r\n\r\n                    // Update chat messages\r\n                    setAllChats(prev => ({\r\n                        ...prev,\r\n                        [otherUserId]: [...(prev[otherUserId] || []), msg]\r\n                    }));\r\n\r\n                    // Add notification if user not selected\r\n                    if (!selectedUser || String(selectedUser.id) !== otherUserId) {\r\n                        setNotifications(prev => ({\r\n                            ...prev,\r\n                            [otherUserId]: (prev[otherUserId] || 0) + 1\r\n                        }));\r\n                    }\r\n                });\r\n\r\n                const res = await fetch(\"http://localhost:5090/api/users\");\r\n                const data = await res.json();\r\n                setUsers(data.filter(u => u.id !== currentUser.id));\r\n            } catch (err) { console.error(err); }\r\n        };\r\n        init();\r\n        return () => connection.off(\"ReceiveMessage\");\r\n    }, [currentUser]);\r\n\r\n    const sendMessage = async (msg, type = \"text\", fileName = null) => {\r\n        if ((!msg && type === \"text\") || !selectedUser) return;\r\n        if (type === \"text\") setMessage(\"\");\r\n        await connection.invoke(\"SendMessage\", selectedUser.id, msg, type, fileName);\r\n    };\r\n\r\n    const fetchMessages = async (user) => {\r\n        const res = await fetch(`http://localhost:5090/api/users/messages/${currentUser.id}/${user.id}`);\r\n        const msgs = await res.json();\r\n        console.log(msgs);\r\n        // Format messages correctly\r\n        const formatted = msgs.map(m => ({\r\n            senderId: m.senderId,\r\n            type: m.type || \"text\",\r\n            fileName: m.fileName,\r\n            senderUsername: m.senderId === currentUser.id ? currentUser.username : user.username,\r\n            message: m.type === \"text\" ? m.text : (m.fileBase64 || \"\") // base64 for image/file\r\n        }));\r\n\r\n        console.log(formatted);\r\n\r\n        // Save in allChats for selected user\r\n        setAllChats(prev => ({\r\n            ...prev,\r\n            [String(user.id)]: formatted\r\n        }));\r\n    };\r\n\r\n    const handleUserClick = async (user) => {\r\n        setSelectedUser(user);\r\n        setNotifications(prev => ({ ...prev, [String(user.id)]: 0 }));\r\n        sessionStorage.setItem(\"lastSelectedUser\", JSON.stringify(user));\r\n        await fetchMessages(user);\r\n    };\r\n\r\n    // Restore last selected user\r\n    useEffect(() => {\r\n        const lastUser = sessionStorage.getItem(\"lastSelectedUser\");\r\n        if (lastUser) handleUserClick(JSON.parse(lastUser));\r\n    }, []);\r\n\r\n    const handleFileChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file || !selectedUser) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"senderId\", currentUser.id);\r\n        formData.append(\"receiverId\", selectedUser.id);\r\n\r\n        const res = await fetch(\"http://localhost:5090/api/files/upload\", { method: \"POST\", body: formData });\r\n        const data = await res.json();\r\n        console.log(data)\r\n        //await sendMessage(data.fileBase64, data.type, file.name);\r\n        const sendMessage = async (message, type, fileName) => {\r\n            if (!selectedUser) return;\r\n            await connection.invoke(\r\n                \"SendMessage\",\r\n                selectedUser.id, // receiverId\r\n                message,\r\n                type,\r\n                fileName || \"\"\r\n            );\r\n        };\r\n        e.target.value = null;\r\n    };\r\n    useEffect(() => {\r\n        if (!connection) return;\r\n\r\n        connection.on(\"ReceiveMessage\", (senderId, receiverId, message, type, fileName) => {\r\n            const msg = {\r\n                senderId,\r\n                receiverId,\r\n                content: message,\r\n                type,\r\n                fileName,\r\n                timestamp: new Date(),\r\n            };\r\n            setMessages((prev) => [...prev, msg]);\r\n        });\r\n\r\n        return () => {\r\n            connection.off(\"ReceiveMessage\");\r\n        };\r\n    }, [connection]);\r\n\r\n    const handleLogoutClick = () => {\r\n        sessionStorage.removeItem(\"currentUser\");\r\n        sessionStorage.removeItem(\"lastSelectedUser\");\r\n        onLogout();\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100\">\r\n            {/* Users List */}\r\n            <div className=\"w-1/4 border-r p-4 overflow-y-auto bg-white shadow\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"font-bold text-lg\">{currentUser.username}</h2>\r\n                    <button onClick={handleLogoutClick} className=\"text-sm bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\">Logout</button>\r\n                </div>\r\n                {users.map(u => (\r\n                    <div key={u.id} onClick={() => handleUserClick(u)}\r\n                        className={`flex justify-between items-center p-2 rounded cursor-pointer mb-1 ${selectedUser?.id === u.id ? \"bg-blue-100\" : \"hover:bg-gray-200\"}`}>\r\n                        <span className=\"font-medium\">{u.username}</span>\r\n                        {notifications[String(u.id)] > 0 && (\r\n                            <span className=\"bg-red-500 text-white rounded-full text-xs px-2 py-0.5\">{notifications[String(u.id)]}</span>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Chat Window */}\r\n            <div className=\"flex-1 flex flex-col p-4\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <div className=\"flex justify-between items-center mb-2\">\r\n                            <h2 className=\"font-bold text-lg border-b pb-2\">{selectedUser.username}</h2>\r\n                            <input type=\"color\" value={chatBackground} onChange={e => setChatBackground(e.target.value)} className=\"w-10 h-8 rounded cursor-pointer\" />\r\n                        </div>\r\n\r\n                        <div className=\"flex-1 overflow-y-auto p-3 rounded-lg shadow-inner flex flex-col space-y-2\" style={{ backgroundColor: chatBackground }}>\r\n                            {(allChats[String(selectedUser.id)] || []).map((c, i) => {\r\n                                let content;\r\n\r\n                                if (c.type === \"text\") {\r\n                                    content = <span>{c.message}</span>;\r\n                                } else if (c.type === \"image\" && c.message) {\r\n                                    content = (\r\n                                        <div className=\"w-[250px] h-[200px] overflow-hidden rounded-lg\">\r\n                                            <img\r\n                                                src={c.message}\r\n                                                alt=\"sent\"\r\n                                                className=\"object-cover w-full h-full\"\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                } else if (c.type === \"file\" && c.message) {\r\n                                    content = (\r\n                                        <a\r\n                                            href={`data:application/octet-stream;base64,${c.message}`}\r\n                                            download={c.fileName}\r\n                                            className=\"underline text-blue-700\"\r\n                                        >\r\n                                            {c.fileName}\r\n                                        </a>\r\n                                    );\r\n                                }\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={i}\r\n                                        className={`max-w-[70%] p-2 rounded-lg shadow break-words ${c.senderId === currentUser.id ? \"self-end bg-blue-500 text-white\" : \"self-start bg-white text-gray-800\"\r\n                                            }`}\r\n                                    >\r\n                                        {content}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n\r\n                            <div ref={messagesEndRef} />\r\n                        </div>\r\n\r\n                        {/* Input */}\r\n                        <div className=\"flex items-center space-x-2 mt-2\">\r\n                            <input className=\"flex-1 border rounded-full p-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                                placeholder=\"Message...\" value={message} onChange={e => setMessage(e.target.value)}\r\n                                onKeyDown={e => e.key === \"Enter\" && sendMessage(message, \"text\")} />\r\n                            <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">📎\r\n                                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} />\r\n                            </label>\r\n                            <label className=\"cursor-pointer bg-gray-200 p-2 rounded-full hover:bg-gray-300\">📸\r\n                                <input type=\"file\" className=\"hidden\" onChange={handleFileChange} accept=\"image/*\" />\r\n                            </label>\r\n                            <button onClick={() => sendMessage(message, \"text\")} className=\"bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600\">Send</button>\r\n                        </div>\r\n                    </>\r\n                ) : <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">Select a user to start chat</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}